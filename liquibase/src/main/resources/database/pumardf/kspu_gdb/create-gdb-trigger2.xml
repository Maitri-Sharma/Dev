<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
<changeSet author="kinariwale-saurabh" context="prod" id="create-gdb-trigger2">
<sql>


DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3847 ON n250_arealdekkelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3847() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3847 WHERE KSPU_GDB.F3847.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3847 WHERE KSPU_GDB.S3847.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3847 WHERE KSPU_GDB.F3847.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3847 WHERE KSPU_GDB.S3847.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3847() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3847
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3847();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3848 ON n250_arealdekkepunkt_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3848() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3848 WHERE KSPU_GDB.F3848.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3848 WHERE KSPU_GDB.S3848.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3848 WHERE KSPU_GDB.F3848.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3848 WHERE KSPU_GDB.S3848.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3848() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3848
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkepunkt_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3848();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3849 ON n250_navnpunkt CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3849() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3849 WHERE KSPU_GDB.F3849.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3849 WHERE KSPU_GDB.S3849.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3849 WHERE KSPU_GDB.F3849.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3849 WHERE KSPU_GDB.S3849.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3849() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3849
	AFTER UPDATE OR DELETE OF shape ON n250_navnpunkt FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3849();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3850 ON n250_samferdsellinje CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3850() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3850 WHERE KSPU_GDB.F3850.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3850 WHERE KSPU_GDB.S3850.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3850 WHERE KSPU_GDB.F3850.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3850 WHERE KSPU_GDB.S3850.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3850() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3850
	AFTER UPDATE OR DELETE OF shape ON n250_samferdsellinje FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3850();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3851 ON n250_samferdselpunkt CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3851() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3851 WHERE KSPU_GDB.F3851.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3851 WHERE KSPU_GDB.S3851.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3851 WHERE KSPU_GDB.F3851.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3851 WHERE KSPU_GDB.S3851.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3851() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3851
	AFTER UPDATE OR DELETE OF shape ON n250_samferdselpunkt FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3851();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3852 ON n5000_arealdekkeflate_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3852() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3852 WHERE KSPU_GDB.F3852.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3852 WHERE KSPU_GDB.S3852.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3852 WHERE KSPU_GDB.F3852.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3852 WHERE KSPU_GDB.S3852.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3852() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3852
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkeflate_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3852();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3853 ON n5000_arealdekkelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3853() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3853 WHERE KSPU_GDB.F3853.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3853 WHERE KSPU_GDB.S3853.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3853 WHERE KSPU_GDB.F3853.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3853 WHERE KSPU_GDB.S3853.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3853() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3853
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3853();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3854 ON n5000_samferdsellinje CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3854() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3854 WHERE KSPU_GDB.F3854.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3854 WHERE KSPU_GDB.S3854.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3854 WHERE KSPU_GDB.F3854.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3854 WHERE KSPU_GDB.S3854.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3854() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3854
	AFTER UPDATE OR DELETE OF shape ON n5000_samferdsellinje FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3854();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3855 ON n5000_sted_p CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3855() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3855 WHERE KSPU_GDB.F3855.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3855 WHERE KSPU_GDB.S3855.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3855 WHERE KSPU_GDB.F3855.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3855 WHERE KSPU_GDB.S3855.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3855() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3855
	AFTER UPDATE OR DELETE OF shape ON n5000_sted_p FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3855();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3856 ON ssr_n50_p CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3856() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3856 WHERE KSPU_GDB.F3856.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3856 WHERE KSPU_GDB.S3856.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3856 WHERE KSPU_GDB.F3856.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3856 WHERE KSPU_GDB.S3856.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3856() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3856
	AFTER UPDATE OR DELETE OF shape ON ssr_n50_p FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3856();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3857 ON trafikktelling_l_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3857() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3857 WHERE KSPU_GDB.F3857.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3857 WHERE KSPU_GDB.S3857.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3857 WHERE KSPU_GDB.F3857.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3857 WHERE KSPU_GDB.S3857.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3857() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3857
	AFTER UPDATE OR DELETE OF shape ON trafikktelling_l_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3857();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3858 ON norway_bedrift_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3858() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3858 WHERE KSPU_GDB.F3858.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3858 WHERE KSPU_GDB.S3858.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3858 WHERE KSPU_GDB.F3858.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3858 WHERE KSPU_GDB.S3858.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3858() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3858
	AFTER UPDATE OR DELETE OF shape ON norway_bedrift_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3858();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3859 ON vegnett_l_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3859() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3859 WHERE KSPU_GDB.F3859.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3859 WHERE KSPU_GDB.S3859.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3859 WHERE KSPU_GDB.F3859.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3859 WHERE KSPU_GDB.S3859.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3859() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3859
	AFTER UPDATE OR DELETE OF shape ON vegnett_l_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3859();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3860 ON norway_bef100_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3860() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3860 WHERE KSPU_GDB.F3860.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3860 WHERE KSPU_GDB.S3860.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3860 WHERE KSPU_GDB.F3860.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3860 WHERE KSPU_GDB.S3860.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3860() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3860
	AFTER UPDATE OR DELETE OF shape ON norway_bef100_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3860();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3861 ON norway_future_kommune_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3861() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3861 WHERE KSPU_GDB.F3861.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3861 WHERE KSPU_GDB.S3861.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3861 WHERE KSPU_GDB.F3861.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3861 WHERE KSPU_GDB.S3861.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3861() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3861
	AFTER UPDATE OR DELETE OF shape ON norway_future_kommune_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3861();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3862 ON norway_fylke_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3862() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3862 WHERE KSPU_GDB.F3862.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3862 WHERE KSPU_GDB.S3862.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3862 WHERE KSPU_GDB.F3862.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3862 WHERE KSPU_GDB.S3862.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3862() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3862
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3862();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3863 ON norway_fylke_index_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3863() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3863 WHERE KSPU_GDB.F3863.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3863 WHERE KSPU_GDB.S3863.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3863 WHERE KSPU_GDB.F3863.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3863 WHERE KSPU_GDB.S3863.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3863() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3863
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_index_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3863();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3864 ON norway_fylke_percent_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3864() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3864 WHERE KSPU_GDB.F3864.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3864 WHERE KSPU_GDB.S3864.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3864 WHERE KSPU_GDB.F3864.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3864 WHERE KSPU_GDB.S3864.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3864() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3864
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_percent_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3864();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3865 ON norway_grunnkrets_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3865() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3865 WHERE KSPU_GDB.F3865.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3865 WHERE KSPU_GDB.S3865.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3865 WHERE KSPU_GDB.F3865.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3865 WHERE KSPU_GDB.S3865.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3865() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3865
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3865();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3866 ON norway_grunnkrets_ind_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3866() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3866 WHERE KSPU_GDB.F3866.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3866 WHERE KSPU_GDB.S3866.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3866 WHERE KSPU_GDB.F3866.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3866 WHERE KSPU_GDB.S3866.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3866() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3866
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_ind_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3866();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3867 ON norway_grunnkrets_per_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3867() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3867 WHERE KSPU_GDB.F3867.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3867 WHERE KSPU_GDB.S3867.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3867 WHERE KSPU_GDB.F3867.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3867 WHERE KSPU_GDB.S3867.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3867() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3867
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_per_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3867();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3868 ON norway_kommune_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3868() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3868 WHERE KSPU_GDB.F3868.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3868 WHERE KSPU_GDB.S3868.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3868 WHERE KSPU_GDB.F3868.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3868 WHERE KSPU_GDB.S3868.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3868() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3868
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3868();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3869 ON norway_kommune_index_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3869() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3869 WHERE KSPU_GDB.F3869.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3869 WHERE KSPU_GDB.S3869.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3869 WHERE KSPU_GDB.F3869.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3869 WHERE KSPU_GDB.S3869.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3869() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3869
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_index_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3869();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3870 ON norway_kommune_per_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3870() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3870 WHERE KSPU_GDB.F3870.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3870 WHERE KSPU_GDB.S3870.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3870 WHERE KSPU_GDB.F3870.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3870 WHERE KSPU_GDB.S3870.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3870() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3870
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_per_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3870();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3871 ON adr_p_posten_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3871() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3871 WHERE KSPU_GDB.F3871.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3871 WHERE KSPU_GDB.S3871.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3871 WHERE KSPU_GDB.F3871.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3871 WHERE KSPU_GDB.S3871.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3871() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3871
	AFTER UPDATE OR DELETE OF shape ON adr_p_posten_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3871();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3872 ON avisdekningkomm_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3872() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3872 WHERE KSPU_GDB.F3872.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3872 WHERE KSPU_GDB.S3872.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3872 WHERE KSPU_GDB.F3872.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3872 WHERE KSPU_GDB.S3872.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3872() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3872
	AFTER UPDATE OR DELETE OF shape ON avisdekningkomm_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3872();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3873 ON gab_adr_p_bolig_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3873() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3873 WHERE KSPU_GDB.F3873.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3873 WHERE KSPU_GDB.S3873.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3873 WHERE KSPU_GDB.F3873.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3873 WHERE KSPU_GDB.S3873.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3873() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3873
	AFTER UPDATE OR DELETE OF shape ON gab_adr_p_bolig_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3873();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3874 ON n250_komm_f_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3874() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3874 WHERE KSPU_GDB.F3874.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3874 WHERE KSPU_GDB.S3874.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3874 WHERE KSPU_GDB.F3874.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3874 WHERE KSPU_GDB.S3874.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3874() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3874
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3874();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3875 ON n250_komm_f_svalbard_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3875() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3875 WHERE KSPU_GDB.F3875.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3875 WHERE KSPU_GDB.S3875.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3875 WHERE KSPU_GDB.F3875.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3875 WHERE KSPU_GDB.S3875.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3875() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3875
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_svalbard_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3875();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3876 ON n5000_land_f CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3876() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3876 WHERE KSPU_GDB.F3876.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3876 WHERE KSPU_GDB.S3876.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3876 WHERE KSPU_GDB.F3876.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3876 WHERE KSPU_GDB.S3876.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3876() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3876
	AFTER UPDATE OR DELETE OF shape ON n5000_land_f FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3876();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3899 ON norway_reol20170121 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3899() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3899 WHERE KSPU_GDB.F3899.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3899 WHERE KSPU_GDB.S3899.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3899 WHERE KSPU_GDB.F3899.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3899 WHERE KSPU_GDB.S3899.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3899() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3899
	AFTER UPDATE OR DELETE OF shape ON norway_reol20170121 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3899();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3926 ON norway_reol20170225 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3926() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3926 WHERE KSPU_GDB.F3926.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3926 WHERE KSPU_GDB.S3926.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3926 WHERE KSPU_GDB.F3926.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3926 WHERE KSPU_GDB.S3926.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3926() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3926
	AFTER UPDATE OR DELETE OF shape ON norway_reol20170225 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3926();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3957 ON norway_reol20170325 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3957() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3957 WHERE KSPU_GDB.F3957.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3957 WHERE KSPU_GDB.S3957.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3957 WHERE KSPU_GDB.F3957.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3957 WHERE KSPU_GDB.S3957.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3957() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3957
	AFTER UPDATE OR DELETE OF shape ON norway_reol20170325 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3957();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3984 ON norway_reol20170506 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3984() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3984 WHERE KSPU_GDB.F3984.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3984 WHERE KSPU_GDB.S3984.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3984 WHERE KSPU_GDB.F3984.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3984 WHERE KSPU_GDB.S3984.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3984() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3984
	AFTER UPDATE OR DELETE OF shape ON norway_reol20170506 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3984();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4011 ON norway_reol20170610 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4011() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4011 WHERE KSPU_GDB.F4011.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4011 WHERE KSPU_GDB.S4011.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4011 WHERE KSPU_GDB.F4011.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4011 WHERE KSPU_GDB.S4011.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4011() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4011
	AFTER UPDATE OR DELETE OF shape ON norway_reol20170610 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4011();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4038 ON norway_reol20170916 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4038() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4038 WHERE KSPU_GDB.F4038.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4038 WHERE KSPU_GDB.S4038.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4038 WHERE KSPU_GDB.F4038.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4038 WHERE KSPU_GDB.S4038.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4038() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4038
	AFTER UPDATE OR DELETE OF shape ON norway_reol20170916 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4038();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4065 ON norway_reol20171014 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4065() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4065 WHERE KSPU_GDB.F4065.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4065 WHERE KSPU_GDB.S4065.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4065 WHERE KSPU_GDB.F4065.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4065 WHERE KSPU_GDB.S4065.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4065() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4065
	AFTER UPDATE OR DELETE OF shape ON norway_reol20171014 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4065();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4092 ON norway_reol20171118 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4092() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4092 WHERE KSPU_GDB.F4092.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4092 WHERE KSPU_GDB.S4092.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4092 WHERE KSPU_GDB.F4092.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4092 WHERE KSPU_GDB.S4092.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4092() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4092
	AFTER UPDATE OR DELETE OF shape ON norway_reol20171118 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4092();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4098 ON adr_p_posten_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4098() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4098 WHERE KSPU_GDB.F4098.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4098 WHERE KSPU_GDB.S4098.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4098 WHERE KSPU_GDB.F4098.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4098 WHERE KSPU_GDB.S4098.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4098() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4098
	AFTER UPDATE OR DELETE OF shape ON adr_p_posten_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4098();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4099 ON fylke_f_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4099() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4099 WHERE KSPU_GDB.F4099.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4099 WHERE KSPU_GDB.S4099.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4099 WHERE KSPU_GDB.F4099.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4099 WHERE KSPU_GDB.S4099.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4099() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4099
	AFTER UPDATE OR DELETE OF shape ON fylke_f_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4099();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4100 ON gkrets_f_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4100() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4100 WHERE KSPU_GDB.F4100.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4100 WHERE KSPU_GDB.S4100.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4100 WHERE KSPU_GDB.F4100.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4100 WHERE KSPU_GDB.S4100.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4100() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4100
	AFTER UPDATE OR DELETE OF shape ON gkrets_f_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4100();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4101 ON komm_f_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4101() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4101 WHERE KSPU_GDB.F4101.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4101 WHERE KSPU_GDB.S4101.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4101 WHERE KSPU_GDB.F4101.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4101 WHERE KSPU_GDB.S4101.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4101() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4101
	AFTER UPDATE OR DELETE OF shape ON komm_f_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4101();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4102 ON postnummergrenser_f_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4102() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4102 WHERE KSPU_GDB.F4102.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4102 WHERE KSPU_GDB.S4102.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4102 WHERE KSPU_GDB.F4102.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4102 WHERE KSPU_GDB.S4102.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4102() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4102
	AFTER UPDATE OR DELETE OF shape ON postnummergrenser_f_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4102();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4103 ON postsoner_f_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4103() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4103 WHERE KSPU_GDB.F4103.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4103 WHERE KSPU_GDB.S4103.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4103 WHERE KSPU_GDB.F4103.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4103 WHERE KSPU_GDB.S4103.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4103() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4103
	AFTER UPDATE OR DELETE OF shape ON postsoner_f_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4103();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4104 ON naring_p_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4104() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4104 WHERE KSPU_GDB.F4104.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4104 WHERE KSPU_GDB.S4104.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4104 WHERE KSPU_GDB.F4104.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4104 WHERE KSPU_GDB.S4104.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4104() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4104
	AFTER UPDATE OR DELETE OF shape ON naring_p_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4104();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4105 ON bomstasjoner_p_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4105() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4105 WHERE KSPU_GDB.F4105.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4105 WHERE KSPU_GDB.S4105.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4105 WHERE KSPU_GDB.F4105.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4105 WHERE KSPU_GDB.S4105.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4105() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4105
	AFTER UPDATE OR DELETE OF shape ON bomstasjoner_p_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4105();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4106 ON bydeler_f_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4106() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4106 WHERE KSPU_GDB.F4106.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4106 WHERE KSPU_GDB.S4106.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4106 WHERE KSPU_GDB.F4106.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4106 WHERE KSPU_GDB.S4106.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4106() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4106
	AFTER UPDATE OR DELETE OF shape ON bydeler_f_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4106();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4107 ON n2000_arealdekkeflate_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4107() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4107 WHERE KSPU_GDB.F4107.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4107 WHERE KSPU_GDB.S4107.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4107 WHERE KSPU_GDB.F4107.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4107 WHERE KSPU_GDB.S4107.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4107() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4107
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkeflate_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4107();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4108 ON n2000_arealdekkepunkt_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4108() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4108 WHERE KSPU_GDB.F4108.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4108 WHERE KSPU_GDB.S4108.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4108 WHERE KSPU_GDB.F4108.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4108 WHERE KSPU_GDB.S4108.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4108() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4108
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkepunkt_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4108();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4109 ON n2000_banelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4109() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4109 WHERE KSPU_GDB.F4109.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4109 WHERE KSPU_GDB.S4109.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4109 WHERE KSPU_GDB.F4109.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4109 WHERE KSPU_GDB.S4109.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4109() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4109
	AFTER UPDATE OR DELETE OF shape ON n2000_banelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4109();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4110 ON n2000_fergelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4110() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4110 WHERE KSPU_GDB.F4110.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4110 WHERE KSPU_GDB.S4110.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4110 WHERE KSPU_GDB.F4110.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4110 WHERE KSPU_GDB.S4110.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4110() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4110
	AFTER UPDATE OR DELETE OF shape ON n2000_fergelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4110();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4112 ON n250_arealdekkeflate_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4112() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4112 WHERE KSPU_GDB.F4112.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4112 WHERE KSPU_GDB.S4112.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4112 WHERE KSPU_GDB.F4112.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4112 WHERE KSPU_GDB.S4112.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4112() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4112
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkeflate_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4112();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4113 ON n250_arealdekkepunkt_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4113() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4113 WHERE KSPU_GDB.F4113.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4113 WHERE KSPU_GDB.S4113.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4113 WHERE KSPU_GDB.F4113.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4113 WHERE KSPU_GDB.S4113.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4113() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4113
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkepunkt_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4113();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4118 ON n5000_arealdekkeflate_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4118() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4118 WHERE KSPU_GDB.F4118.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4118 WHERE KSPU_GDB.S4118.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4118 WHERE KSPU_GDB.F4118.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4118 WHERE KSPU_GDB.S4118.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4118() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4118
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkeflate_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4118();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4119 ON n5000_banelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4119() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4119 WHERE KSPU_GDB.F4119.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4119 WHERE KSPU_GDB.S4119.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4119 WHERE KSPU_GDB.F4119.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4119 WHERE KSPU_GDB.S4119.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4119() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4119
	AFTER UPDATE OR DELETE OF shape ON n5000_banelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4119();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4120 ON n250_banelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4120() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4120 WHERE KSPU_GDB.F4120.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4120 WHERE KSPU_GDB.S4120.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4120 WHERE KSPU_GDB.F4120.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4120 WHERE KSPU_GDB.S4120.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4120() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4120
	AFTER UPDATE OR DELETE OF shape ON n250_banelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4120();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4121 ON n250_fergelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4121() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4121 WHERE KSPU_GDB.F4121.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4121 WHERE KSPU_GDB.S4121.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4121 WHERE KSPU_GDB.F4121.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4121 WHERE KSPU_GDB.S4121.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4121() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4121
	AFTER UPDATE OR DELETE OF shape ON n250_fergelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4121();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4122 ON n250_jernbanepunkt_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4122() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4122 WHERE KSPU_GDB.F4122.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4122 WHERE KSPU_GDB.S4122.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4122 WHERE KSPU_GDB.F4122.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4122 WHERE KSPU_GDB.S4122.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4122() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4122
	AFTER UPDATE OR DELETE OF shape ON n250_jernbanepunkt_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4122();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4123 ON n250_lufthavnpunkt_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4123() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4123 WHERE KSPU_GDB.F4123.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4123 WHERE KSPU_GDB.S4123.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4123 WHERE KSPU_GDB.F4123.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4123 WHERE KSPU_GDB.S4123.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4123() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4123
	AFTER UPDATE OR DELETE OF shape ON n250_lufthavnpunkt_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4123();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4124 ON n5000_fergelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4124() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4124 WHERE KSPU_GDB.F4124.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4124 WHERE KSPU_GDB.S4124.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4124 WHERE KSPU_GDB.F4124.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4124 WHERE KSPU_GDB.S4124.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4124() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4124
	AFTER UPDATE OR DELETE OF shape ON n5000_fergelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4124();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4125 ON n5000_navnpunkt_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4125() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4125 WHERE KSPU_GDB.F4125.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4125 WHERE KSPU_GDB.S4125.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4125 WHERE KSPU_GDB.F4125.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4125 WHERE KSPU_GDB.S4125.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4125() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4125
	AFTER UPDATE OR DELETE OF shape ON n5000_navnpunkt_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4125();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4126 ON trafikktelling_l_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4126() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4126 WHERE KSPU_GDB.F4126.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4126 WHERE KSPU_GDB.S4126.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4126 WHERE KSPU_GDB.F4126.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4126 WHERE KSPU_GDB.S4126.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4126() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4126
	AFTER UPDATE OR DELETE OF shape ON trafikktelling_l_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4126();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4128 ON norway_bedrift_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4128() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4128 WHERE KSPU_GDB.F4128.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4128 WHERE KSPU_GDB.S4128.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4128 WHERE KSPU_GDB.F4128.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4128 WHERE KSPU_GDB.S4128.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4128() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4128
	AFTER UPDATE OR DELETE OF shape ON norway_bedrift_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4128();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4129 ON norway_bef100_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4129() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4129 WHERE KSPU_GDB.F4129.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4129 WHERE KSPU_GDB.S4129.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4129 WHERE KSPU_GDB.F4129.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4129 WHERE KSPU_GDB.S4129.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4129() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4129
	AFTER UPDATE OR DELETE OF shape ON norway_bef100_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4129();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4130 ON norway_future_kommune_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4130() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4130 WHERE KSPU_GDB.F4130.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4130 WHERE KSPU_GDB.S4130.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4130 WHERE KSPU_GDB.F4130.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4130 WHERE KSPU_GDB.S4130.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4130() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4130
	AFTER UPDATE OR DELETE OF shape ON norway_future_kommune_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4130();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4131 ON norway_fylke_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4131() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4131 WHERE KSPU_GDB.F4131.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4131 WHERE KSPU_GDB.S4131.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4131 WHERE KSPU_GDB.F4131.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4131 WHERE KSPU_GDB.S4131.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4131() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4131
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4131();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4132 ON norway_fylke_index_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4132() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4132 WHERE KSPU_GDB.F4132.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4132 WHERE KSPU_GDB.S4132.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4132 WHERE KSPU_GDB.F4132.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4132 WHERE KSPU_GDB.S4132.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4132() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4132
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_index_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4132();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4133 ON norway_fylke_percent_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4133() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4133 WHERE KSPU_GDB.F4133.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4133 WHERE KSPU_GDB.S4133.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4133 WHERE KSPU_GDB.F4133.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4133 WHERE KSPU_GDB.S4133.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4133() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4133
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_percent_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4133();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4134 ON norway_grunnkrets_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4134() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4134 WHERE KSPU_GDB.F4134.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4134 WHERE KSPU_GDB.S4134.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4134 WHERE KSPU_GDB.F4134.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4134 WHERE KSPU_GDB.S4134.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4134() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4134
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4134();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4135 ON norway_grunnkrets_ind_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4135() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4135 WHERE KSPU_GDB.F4135.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4135 WHERE KSPU_GDB.S4135.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4135 WHERE KSPU_GDB.F4135.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4135 WHERE KSPU_GDB.S4135.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4135() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4135
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_ind_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4135();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4136 ON norway_grunnkrets_per_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4136() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4136 WHERE KSPU_GDB.F4136.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4136 WHERE KSPU_GDB.S4136.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4136 WHERE KSPU_GDB.F4136.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4136 WHERE KSPU_GDB.S4136.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4136() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4136
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_per_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4136();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4137 ON norway_kommune_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4137() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4137 WHERE KSPU_GDB.F4137.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4137 WHERE KSPU_GDB.S4137.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4137 WHERE KSPU_GDB.F4137.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4137 WHERE KSPU_GDB.S4137.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4137() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4137
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4137();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4138 ON norway_kommune_index_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4138() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4138 WHERE KSPU_GDB.F4138.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4138 WHERE KSPU_GDB.S4138.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4138 WHERE KSPU_GDB.F4138.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4138 WHERE KSPU_GDB.S4138.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4138() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4138
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_index_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4138();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4139 ON norway_kommune_percent_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4139() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4139 WHERE KSPU_GDB.F4139.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4139 WHERE KSPU_GDB.S4139.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4139 WHERE KSPU_GDB.F4139.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4139 WHERE KSPU_GDB.S4139.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4139() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4139
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_percent_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4139();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4140 ON vegnett_l_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4140() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4140 WHERE KSPU_GDB.F4140.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4140 WHERE KSPU_GDB.S4140.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4140 WHERE KSPU_GDB.F4140.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4140 WHERE KSPU_GDB.S4140.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4140() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4140
	AFTER UPDATE OR DELETE OF shape ON vegnett_l_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4140();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4141 ON avisdekningkomm_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4141() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4141 WHERE KSPU_GDB.F4141.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4141 WHERE KSPU_GDB.S4141.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4141 WHERE KSPU_GDB.F4141.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4141 WHERE KSPU_GDB.S4141.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4141() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4141
	AFTER UPDATE OR DELETE OF shape ON avisdekningkomm_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4141();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4142 ON gab_adr_p_bolig_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4142() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4142 WHERE KSPU_GDB.F4142.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4142 WHERE KSPU_GDB.S4142.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4142 WHERE KSPU_GDB.F4142.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4142 WHERE KSPU_GDB.S4142.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4142() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4142
	AFTER UPDATE OR DELETE OF shape ON gab_adr_p_bolig_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4142();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4143 ON n250_komm_f_svalbard_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4143() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4143 WHERE KSPU_GDB.F4143.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4143 WHERE KSPU_GDB.S4143.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4143 WHERE KSPU_GDB.F4143.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4143 WHERE KSPU_GDB.S4143.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4143() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4143
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_svalbard_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4143();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4144 ON n250_komm_f_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4144() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4144 WHERE KSPU_GDB.F4144.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4144 WHERE KSPU_GDB.S4144.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4144 WHERE KSPU_GDB.F4144.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4144 WHERE KSPU_GDB.S4144.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4144() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4144
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4144();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4167 ON norway_reol20180120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4167() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4167 WHERE KSPU_GDB.F4167.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4167 WHERE KSPU_GDB.S4167.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4167 WHERE KSPU_GDB.F4167.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S4167 WHERE KSPU_GDB.S4167.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4167() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4167
	AFTER UPDATE OR DELETE OF shape ON norway_reol20180120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4167();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4172 ON norway_reol20070620 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4172() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4172 WHERE KSPU_GDB.F4172.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4172 WHERE KSPU_GDB.S4172.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4172 WHERE KSPU_GDB.F4172.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4172 WHERE KSPU_GDB.S4172.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4172() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4172
	AFTER UPDATE OR DELETE OF shape ON norway_reol20070620 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4172();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4173 ON norway_reol20070628 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4173() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4173 WHERE KSPU_GDB.F4173.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4173 WHERE KSPU_GDB.S4173.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4173 WHERE KSPU_GDB.F4173.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4173 WHERE KSPU_GDB.S4173.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4173() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4173
	AFTER UPDATE OR DELETE OF shape ON norway_reol20070628 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4173();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4174 ON norway_reol20070630 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4174() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4174 WHERE KSPU_GDB.F4174.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4174 WHERE KSPU_GDB.S4174.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4174 WHERE KSPU_GDB.F4174.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4174 WHERE KSPU_GDB.S4174.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4174() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4174
	AFTER UPDATE OR DELETE OF shape ON norway_reol20070630 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4174();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4175 ON norway_reol20070906 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4175() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4175 WHERE KSPU_GDB.F4175.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4175 WHERE KSPU_GDB.S4175.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4175 WHERE KSPU_GDB.F4175.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4175 WHERE KSPU_GDB.S4175.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4175() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4175
	AFTER UPDATE OR DELETE OF shape ON norway_reol20070906 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4175();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4176 ON norway_reol20071013 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4176() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4176 WHERE KSPU_GDB.F4176.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4176 WHERE KSPU_GDB.S4176.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4176 WHERE KSPU_GDB.F4176.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4176 WHERE KSPU_GDB.S4176.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4176() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4176
	AFTER UPDATE OR DELETE OF shape ON norway_reol20071013 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4176();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4177 ON norway_reol20071014 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4177() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4177 WHERE KSPU_GDB.F4177.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4177 WHERE KSPU_GDB.S4177.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4177 WHERE KSPU_GDB.F4177.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4177 WHERE KSPU_GDB.S4177.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4177() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4177
	AFTER UPDATE OR DELETE OF shape ON norway_reol20071014 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4177();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4178 ON norway_reol20071106 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4178() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4178 WHERE KSPU_GDB.F4178.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4178 WHERE KSPU_GDB.S4178.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4178 WHERE KSPU_GDB.F4178.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4178 WHERE KSPU_GDB.S4178.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4178() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4178
	AFTER UPDATE OR DELETE OF shape ON norway_reol20071106 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4178();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4179 ON norway_reol20080205 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4179() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4179 WHERE KSPU_GDB.F4179.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4179 WHERE KSPU_GDB.S4179.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4179 WHERE KSPU_GDB.F4179.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4179 WHERE KSPU_GDB.S4179.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4179() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4179
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080205 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4179();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4180 ON norway_reol20080215 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4180() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4180 WHERE KSPU_GDB.F4180.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4180 WHERE KSPU_GDB.S4180.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4180 WHERE KSPU_GDB.F4180.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4180 WHERE KSPU_GDB.S4180.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4180() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4180
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080215 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4180();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4181 ON norway_reol20080218 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4181() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4181 WHERE KSPU_GDB.F4181.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4181 WHERE KSPU_GDB.S4181.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4181 WHERE KSPU_GDB.F4181.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4181 WHERE KSPU_GDB.S4181.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4181() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4181
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080218 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4181();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4182 ON norway_reol20080308 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4182() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4182 WHERE KSPU_GDB.F4182.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4182 WHERE KSPU_GDB.S4182.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4182 WHERE KSPU_GDB.F4182.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4182 WHERE KSPU_GDB.S4182.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4182() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4182
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080308 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4182();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4183 ON norway_reol20080503 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4183() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4183 WHERE KSPU_GDB.F4183.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4183 WHERE KSPU_GDB.S4183.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4183 WHERE KSPU_GDB.F4183.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4183 WHERE KSPU_GDB.S4183.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4183() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4183
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080503 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4183();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4184 ON norway_reol20080511 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4184() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4184 WHERE KSPU_GDB.F4184.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4184 WHERE KSPU_GDB.S4184.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4184 WHERE KSPU_GDB.F4184.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4184 WHERE KSPU_GDB.S4184.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4184() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4184
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080511 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4184();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4185 ON norway_reol20080530 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4185() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4185 WHERE KSPU_GDB.F4185.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4185 WHERE KSPU_GDB.S4185.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4185 WHERE KSPU_GDB.F4185.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4185 WHERE KSPU_GDB.S4185.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4185() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4185
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080530 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4185();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4186 ON norway_reol20080826 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4186() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4186 WHERE KSPU_GDB.F4186.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4186 WHERE KSPU_GDB.S4186.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4186 WHERE KSPU_GDB.F4186.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4186 WHERE KSPU_GDB.S4186.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4186() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4186
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080826 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4186();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4187 ON norway_reol20080919 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4187() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4187 WHERE KSPU_GDB.F4187.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4187 WHERE KSPU_GDB.S4187.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4187 WHERE KSPU_GDB.F4187.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4187 WHERE KSPU_GDB.S4187.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4187() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4187
	AFTER UPDATE OR DELETE OF shape ON norway_reol20080919 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4187();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4188 ON norway_reol20081011 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4188() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4188 WHERE KSPU_GDB.F4188.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4188 WHERE KSPU_GDB.S4188.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4188 WHERE KSPU_GDB.F4188.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4188 WHERE KSPU_GDB.S4188.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4188() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4188
	AFTER UPDATE OR DELETE OF shape ON norway_reol20081011 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4188();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4189 ON norway_reol20081107 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4189() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4189 WHERE KSPU_GDB.F4189.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4189 WHERE KSPU_GDB.S4189.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4189 WHERE KSPU_GDB.F4189.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4189 WHERE KSPU_GDB.S4189.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4189() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4189
	AFTER UPDATE OR DELETE OF shape ON norway_reol20081107 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4189();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4190 ON norway_reol20081113 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4190() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4190 WHERE KSPU_GDB.F4190.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4190 WHERE KSPU_GDB.S4190.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4190 WHERE KSPU_GDB.F4190.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4190 WHERE KSPU_GDB.S4190.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4190() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4190
	AFTER UPDATE OR DELETE OF shape ON norway_reol20081113 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4190();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4191 ON norway_reol20090131 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4191() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4191 WHERE KSPU_GDB.F4191.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4191 WHERE KSPU_GDB.S4191.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4191 WHERE KSPU_GDB.F4191.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4191 WHERE KSPU_GDB.S4191.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4191() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4191
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090131 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4191();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4192 ON norway_reol20090202 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4192() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4192 WHERE KSPU_GDB.F4192.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4192 WHERE KSPU_GDB.S4192.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4192 WHERE KSPU_GDB.F4192.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4192 WHERE KSPU_GDB.S4192.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4192() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4192
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090202 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4192();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4193 ON norway_reol20090214 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4193() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4193 WHERE KSPU_GDB.F4193.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4193 WHERE KSPU_GDB.S4193.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4193 WHERE KSPU_GDB.F4193.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4193 WHERE KSPU_GDB.S4193.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4193() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4193
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090214 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4193();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4194 ON norway_reol20090425 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4194() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4194 WHERE KSPU_GDB.F4194.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4194 WHERE KSPU_GDB.S4194.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4194 WHERE KSPU_GDB.F4194.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4194 WHERE KSPU_GDB.S4194.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4194() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4194
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090425 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4194();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4195 ON norway_reol20090523 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4195() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4195 WHERE KSPU_GDB.F4195.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4195 WHERE KSPU_GDB.S4195.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4195 WHERE KSPU_GDB.F4195.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4195 WHERE KSPU_GDB.S4195.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4195() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4195
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090523 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4195();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4196 ON norway_reol20090621 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4196() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4196 WHERE KSPU_GDB.F4196.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4196 WHERE KSPU_GDB.S4196.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4196 WHERE KSPU_GDB.F4196.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4196 WHERE KSPU_GDB.S4196.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4196() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4196
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090621 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4196();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4197 ON norway_reol20090829 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4197() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4197 WHERE KSPU_GDB.F4197.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4197 WHERE KSPU_GDB.S4197.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4197 WHERE KSPU_GDB.F4197.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4197 WHERE KSPU_GDB.S4197.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4197() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4197
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090829 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4197();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4198 ON norway_reol20090911 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4198() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4198 WHERE KSPU_GDB.F4198.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4198 WHERE KSPU_GDB.S4198.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4198 WHERE KSPU_GDB.F4198.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4198 WHERE KSPU_GDB.S4198.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4198() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4198
	AFTER UPDATE OR DELETE OF shape ON norway_reol20090911 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4198();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4199 ON norway_reol20091011 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4199() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4199 WHERE KSPU_GDB.F4199.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4199 WHERE KSPU_GDB.S4199.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4199 WHERE KSPU_GDB.F4199.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4199 WHERE KSPU_GDB.S4199.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4199() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4199
	AFTER UPDATE OR DELETE OF shape ON norway_reol20091011 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4199();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4200 ON norway_reol20091106 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4200() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4200 WHERE KSPU_GDB.F4200.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4200 WHERE KSPU_GDB.S4200.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4200 WHERE KSPU_GDB.F4200.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4200 WHERE KSPU_GDB.S4200.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4200() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4200
	AFTER UPDATE OR DELETE OF shape ON norway_reol20091106 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4200();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4201 ON norway_reol20100109 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4201() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4201 WHERE KSPU_GDB.F4201.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4201 WHERE KSPU_GDB.S4201.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4201 WHERE KSPU_GDB.F4201.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4201 WHERE KSPU_GDB.S4201.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4201() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4201
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100109 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4201();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4202 ON norway_reol20100205 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4202() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4202 WHERE KSPU_GDB.F4202.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4202 WHERE KSPU_GDB.S4202.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4202 WHERE KSPU_GDB.F4202.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4202 WHERE KSPU_GDB.S4202.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4202() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4202
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100205 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4202();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4203 ON norway_reol20100306 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4203() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4203 WHERE KSPU_GDB.F4203.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4203 WHERE KSPU_GDB.S4203.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4203 WHERE KSPU_GDB.F4203.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4203 WHERE KSPU_GDB.S4203.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4203() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4203
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100306 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4203();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4204 ON norway_reol20100508 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4204() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4204 WHERE KSPU_GDB.F4204.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4204 WHERE KSPU_GDB.S4204.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4204 WHERE KSPU_GDB.F4204.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4204 WHERE KSPU_GDB.S4204.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4204() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4204
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100508 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4204();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4205 ON norway_reol20100529 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4205() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4205 WHERE KSPU_GDB.F4205.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4205 WHERE KSPU_GDB.S4205.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4205 WHERE KSPU_GDB.F4205.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4205 WHERE KSPU_GDB.S4205.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4205() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4205
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100529 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4205();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4206 ON norway_reol20100814 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4206() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4206 WHERE KSPU_GDB.F4206.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4206 WHERE KSPU_GDB.S4206.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4206 WHERE KSPU_GDB.F4206.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4206 WHERE KSPU_GDB.S4206.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4206() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4206
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100814 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4206();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4207 ON norway_reol20100814_180810 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4207() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4207 WHERE KSPU_GDB.F4207.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4207 WHERE KSPU_GDB.S4207.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4207 WHERE KSPU_GDB.F4207.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4207 WHERE KSPU_GDB.S4207.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4207() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4207
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100814_180810 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4207();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4208 ON norway_reol20100924 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4208() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4208 WHERE KSPU_GDB.F4208.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4208 WHERE KSPU_GDB.S4208.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4208 WHERE KSPU_GDB.F4208.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4208 WHERE KSPU_GDB.S4208.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4208() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4208
	AFTER UPDATE OR DELETE OF shape ON norway_reol20100924 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4208();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4209 ON norway_reol20101010 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4209() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4209 WHERE KSPU_GDB.F4209.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4209 WHERE KSPU_GDB.S4209.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4209 WHERE KSPU_GDB.F4209.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4209 WHERE KSPU_GDB.S4209.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4209() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4209
	AFTER UPDATE OR DELETE OF shape ON norway_reol20101010 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4209();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4210 ON norway_reol20101105 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4210() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4210 WHERE KSPU_GDB.F4210.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4210 WHERE KSPU_GDB.S4210.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4210 WHERE KSPU_GDB.F4210.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4210 WHERE KSPU_GDB.S4210.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4210() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4210
	AFTER UPDATE OR DELETE OF shape ON norway_reol20101105 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4210();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4211 ON norway_reol20110115 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4211() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4211 WHERE KSPU_GDB.F4211.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4211 WHERE KSPU_GDB.S4211.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4211 WHERE KSPU_GDB.F4211.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4211 WHERE KSPU_GDB.S4211.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4211() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4211
	AFTER UPDATE OR DELETE OF shape ON norway_reol20110115 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4211();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4212 ON norway_reol20110212 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4212() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4212 WHERE KSPU_GDB.F4212.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4212 WHERE KSPU_GDB.S4212.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4212 WHERE KSPU_GDB.F4212.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4212 WHERE KSPU_GDB.S4212.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4212() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4212
	AFTER UPDATE OR DELETE OF shape ON norway_reol20110212 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4212();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4213 ON norway_reol20110312 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4213() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4213 WHERE KSPU_GDB.F4213.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4213 WHERE KSPU_GDB.S4213.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4213 WHERE KSPU_GDB.F4213.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4213 WHERE KSPU_GDB.S4213.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4213() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4213
	AFTER UPDATE OR DELETE OF shape ON norway_reol20110312 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4213();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4214 ON norway_reol20110409 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4214() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4214 WHERE KSPU_GDB.F4214.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4214 WHERE KSPU_GDB.S4214.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4214 WHERE KSPU_GDB.F4214.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4214 WHERE KSPU_GDB.S4214.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4214() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4214
	AFTER UPDATE OR DELETE OF shape ON norway_reol20110409 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4214();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4215 ON norway_reol20110507 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4215() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4215 WHERE KSPU_GDB.F4215.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4215 WHERE KSPU_GDB.S4215.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4215 WHERE KSPU_GDB.F4215.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4215 WHERE KSPU_GDB.S4215.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4215() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4215
	AFTER UPDATE OR DELETE OF shape ON norway_reol20110507 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4215();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4216 ON norway_reol20110604 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4216() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4216 WHERE KSPU_GDB.F4216.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4216 WHERE KSPU_GDB.S4216.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4216 WHERE KSPU_GDB.F4216.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4216 WHERE KSPU_GDB.S4216.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4216() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4216
	AFTER UPDATE OR DELETE OF shape ON norway_reol20110604 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4216();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4217 ON norway_reol20110910 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4217() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4217 WHERE KSPU_GDB.F4217.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4217 WHERE KSPU_GDB.S4217.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4217 WHERE KSPU_GDB.F4217.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4217 WHERE KSPU_GDB.S4217.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4217() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4217
	AFTER UPDATE OR DELETE OF shape ON norway_reol20110910 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4217();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4218 ON norway_reol20111022 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4218() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4218 WHERE KSPU_GDB.F4218.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4218 WHERE KSPU_GDB.S4218.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4218 WHERE KSPU_GDB.F4218.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4218 WHERE KSPU_GDB.S4218.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4218() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4218
	AFTER UPDATE OR DELETE OF shape ON norway_reol20111022 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4218();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4219 ON norway_reol20111105 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4219() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4219 WHERE KSPU_GDB.F4219.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4219 WHERE KSPU_GDB.S4219.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4219 WHERE KSPU_GDB.F4219.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4219 WHERE KSPU_GDB.S4219.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4219() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4219
	AFTER UPDATE OR DELETE OF shape ON norway_reol20111105 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4219();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4220 ON norway_reol20120114 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4220() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4220 WHERE KSPU_GDB.F4220.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4220 WHERE KSPU_GDB.S4220.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4220 WHERE KSPU_GDB.F4220.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4220 WHERE KSPU_GDB.S4220.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4220() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4220
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120114 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4220();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4221 ON norway_reol20120115 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4221() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4221 WHERE KSPU_GDB.F4221.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4221 WHERE KSPU_GDB.S4221.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4221 WHERE KSPU_GDB.F4221.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4221 WHERE KSPU_GDB.S4221.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4221() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4221
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120115 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4221();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4222 ON norway_reol20120218 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4222() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4222 WHERE KSPU_GDB.F4222.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4222 WHERE KSPU_GDB.S4222.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4222 WHERE KSPU_GDB.F4222.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4222 WHERE KSPU_GDB.S4222.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4222() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4222
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120218 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4222();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4223 ON norway_reol20120324 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4223() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4223 WHERE KSPU_GDB.F4223.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4223 WHERE KSPU_GDB.S4223.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4223 WHERE KSPU_GDB.F4223.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4223 WHERE KSPU_GDB.S4223.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4223() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4223
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120324 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4223();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4224 ON norway_reol20120428 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4224() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4224 WHERE KSPU_GDB.F4224.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4224 WHERE KSPU_GDB.S4224.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4224 WHERE KSPU_GDB.F4224.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4224 WHERE KSPU_GDB.S4224.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4224() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4224
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120428 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4224();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4225 ON norway_reol20120428_0609 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4225() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4225 WHERE KSPU_GDB.F4225.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4225 WHERE KSPU_GDB.S4225.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4225 WHERE KSPU_GDB.F4225.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4225 WHERE KSPU_GDB.S4225.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4225() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4225
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120428_0609 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4225();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4226 ON norway_reol20120616 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4226() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4226 WHERE KSPU_GDB.F4226.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4226 WHERE KSPU_GDB.S4226.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4226 WHERE KSPU_GDB.F4226.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4226 WHERE KSPU_GDB.S4226.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4226() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4226
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120616 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4226();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4227 ON norway_reol20120908 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4227() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4227 WHERE KSPU_GDB.F4227.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4227 WHERE KSPU_GDB.S4227.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4227 WHERE KSPU_GDB.F4227.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4227 WHERE KSPU_GDB.S4227.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4227() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4227
	AFTER UPDATE OR DELETE OF shape ON norway_reol20120908 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4227();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4228 ON norway_reol20121013 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4228() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4228 WHERE KSPU_GDB.F4228.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4228 WHERE KSPU_GDB.S4228.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4228 WHERE KSPU_GDB.F4228.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4228 WHERE KSPU_GDB.S4228.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4228() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4228
	AFTER UPDATE OR DELETE OF shape ON norway_reol20121013 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4228();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4229 ON norway_reol20121110 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4229() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4229 WHERE KSPU_GDB.F4229.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4229 WHERE KSPU_GDB.S4229.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4229 WHERE KSPU_GDB.F4229.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4229 WHERE KSPU_GDB.S4229.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4229() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4229
	AFTER UPDATE OR DELETE OF shape ON norway_reol20121110 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4229();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4230 ON norway_reol20130119 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4230() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4230 WHERE KSPU_GDB.F4230.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4230 WHERE KSPU_GDB.S4230.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4230 WHERE KSPU_GDB.F4230.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4230 WHERE KSPU_GDB.S4230.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4230() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4230
	AFTER UPDATE OR DELETE OF shape ON norway_reol20130119 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4230();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4231 ON norway_reol20130209 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4231() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4231 WHERE KSPU_GDB.F4231.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4231 WHERE KSPU_GDB.S4231.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4231 WHERE KSPU_GDB.F4231.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4231 WHERE KSPU_GDB.S4231.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4231() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4231
	AFTER UPDATE OR DELETE OF shape ON norway_reol20130209 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4231();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4232 ON norway_reol20130309 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4232() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4232 WHERE KSPU_GDB.F4232.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4232 WHERE KSPU_GDB.S4232.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4232 WHERE KSPU_GDB.F4232.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4232 WHERE KSPU_GDB.S4232.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4232() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4232
	AFTER UPDATE OR DELETE OF shape ON norway_reol20130309 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4232();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4233 ON norway_reol20130427 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4233() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4233 WHERE KSPU_GDB.F4233.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4233 WHERE KSPU_GDB.S4233.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4233 WHERE KSPU_GDB.F4233.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4233 WHERE KSPU_GDB.S4233.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4233() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4233
	AFTER UPDATE OR DELETE OF shape ON norway_reol20130427 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4233();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4234 ON norway_reol20130608 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4234() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4234 WHERE KSPU_GDB.F4234.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4234 WHERE KSPU_GDB.S4234.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4234 WHERE KSPU_GDB.F4234.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4234 WHERE KSPU_GDB.S4234.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4234() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4234
	AFTER UPDATE OR DELETE OF shape ON norway_reol20130608 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4234();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4235 ON norway_reol20130907 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4235() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4235 WHERE KSPU_GDB.F4235.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4235 WHERE KSPU_GDB.S4235.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4235 WHERE KSPU_GDB.F4235.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4235 WHERE KSPU_GDB.S4235.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4235() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4235
	AFTER UPDATE OR DELETE OF shape ON norway_reol20130907 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4235();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4236 ON norway_reol20130907_old CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4236() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4236 WHERE KSPU_GDB.F4236.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4236 WHERE KSPU_GDB.S4236.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4236 WHERE KSPU_GDB.F4236.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4236 WHERE KSPU_GDB.S4236.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4236() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4236
	AFTER UPDATE OR DELETE OF shape ON norway_reol20130907_old FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4236();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4237 ON norway_reol20131012 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4237() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4237 WHERE KSPU_GDB.F4237.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4237 WHERE KSPU_GDB.S4237.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4237 WHERE KSPU_GDB.F4237.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4237 WHERE KSPU_GDB.S4237.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4237() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4237
	AFTER UPDATE OR DELETE OF shape ON norway_reol20131012 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4237();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4238 ON norway_reol20131116 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4238() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4238 WHERE KSPU_GDB.F4238.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4238 WHERE KSPU_GDB.S4238.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4238 WHERE KSPU_GDB.F4238.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4238 WHERE KSPU_GDB.S4238.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4238() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4238
	AFTER UPDATE OR DELETE OF shape ON norway_reol20131116 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4238();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4239 ON norway_reol20140125 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4239() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4239 WHERE KSPU_GDB.F4239.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4239 WHERE KSPU_GDB.S4239.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4239 WHERE KSPU_GDB.F4239.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4239 WHERE KSPU_GDB.S4239.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4239() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4239
	AFTER UPDATE OR DELETE OF shape ON norway_reol20140125 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4239();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4240 ON norway_reol20140308 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4240() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4240 WHERE KSPU_GDB.F4240.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4240 WHERE KSPU_GDB.S4240.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4240 WHERE KSPU_GDB.F4240.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4240 WHERE KSPU_GDB.S4240.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4240() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4240
	AFTER UPDATE OR DELETE OF shape ON norway_reol20140308 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4240();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4241 ON norway_reol20140405 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4241() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4241 WHERE KSPU_GDB.F4241.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4241 WHERE KSPU_GDB.S4241.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4241 WHERE KSPU_GDB.F4241.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4241 WHERE KSPU_GDB.S4241.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4241() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4241
	AFTER UPDATE OR DELETE OF shape ON norway_reol20140405 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4241();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4242 ON norway_reol20140524 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4242() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4242 WHERE KSPU_GDB.F4242.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4242 WHERE KSPU_GDB.S4242.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4242 WHERE KSPU_GDB.F4242.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4242 WHERE KSPU_GDB.S4242.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4242() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4242
	AFTER UPDATE OR DELETE OF shape ON norway_reol20140524 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4242();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4243 ON norway_reol20140621 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4243() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4243 WHERE KSPU_GDB.F4243.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4243 WHERE KSPU_GDB.S4243.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4243 WHERE KSPU_GDB.F4243.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4243 WHERE KSPU_GDB.S4243.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4243() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4243
	AFTER UPDATE OR DELETE OF shape ON norway_reol20140621 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4243();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4244 ON norway_reol20140906 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4244() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4244 WHERE KSPU_GDB.F4244.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4244 WHERE KSPU_GDB.S4244.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4244 WHERE KSPU_GDB.F4244.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4244 WHERE KSPU_GDB.S4244.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4244() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4244
	AFTER UPDATE OR DELETE OF shape ON norway_reol20140906 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4244();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4245 ON norway_reol20141011 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4245() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4245 WHERE KSPU_GDB.F4245.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4245 WHERE KSPU_GDB.S4245.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4245 WHERE KSPU_GDB.F4245.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4245 WHERE KSPU_GDB.S4245.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4245() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4245
	AFTER UPDATE OR DELETE OF shape ON norway_reol20141011 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4245();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4246 ON norway_reol20141115 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4246() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4246 WHERE KSPU_GDB.F4246.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4246 WHERE KSPU_GDB.S4246.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4246 WHERE KSPU_GDB.F4246.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4246 WHERE KSPU_GDB.S4246.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4246() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4246
	AFTER UPDATE OR DELETE OF shape ON norway_reol20141115 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4246();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4247 ON norway_reol20141116 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4247() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4247 WHERE KSPU_GDB.F4247.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4247 WHERE KSPU_GDB.S4247.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4247 WHERE KSPU_GDB.F4247.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4247 WHERE KSPU_GDB.S4247.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4247() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4247
	AFTER UPDATE OR DELETE OF shape ON norway_reol20141116 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4247();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4248 ON norway_reol20141121 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4248() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4248 WHERE KSPU_GDB.F4248.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4248 WHERE KSPU_GDB.S4248.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4248 WHERE KSPU_GDB.F4248.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4248 WHERE KSPU_GDB.S4248.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4248() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4248
	AFTER UPDATE OR DELETE OF shape ON norway_reol20141121 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4248();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4249 ON norway_reol20150131 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4249() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4249 WHERE KSPU_GDB.F4249.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4249 WHERE KSPU_GDB.S4249.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4249 WHERE KSPU_GDB.F4249.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4249 WHERE KSPU_GDB.S4249.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4249() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4249
	AFTER UPDATE OR DELETE OF shape ON norway_reol20150131 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4249();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4250 ON norway_reol20150227 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4250() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4250 WHERE KSPU_GDB.F4250.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4250 WHERE KSPU_GDB.S4250.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4250 WHERE KSPU_GDB.F4250.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4250 WHERE KSPU_GDB.S4250.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4250() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4250
	AFTER UPDATE OR DELETE OF shape ON norway_reol20150227 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4250();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4251 ON norway_reol20150320 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4251() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4251 WHERE KSPU_GDB.F4251.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4251 WHERE KSPU_GDB.S4251.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4251 WHERE KSPU_GDB.F4251.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4251 WHERE KSPU_GDB.S4251.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4251() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4251
	AFTER UPDATE OR DELETE OF shape ON norway_reol20150320 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4251();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4252 ON norway_reol20150426 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4252() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4252 WHERE KSPU_GDB.F4252.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4252 WHERE KSPU_GDB.S4252.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4252 WHERE KSPU_GDB.F4252.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4252 WHERE KSPU_GDB.S4252.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4252() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4252
	AFTER UPDATE OR DELETE OF shape ON norway_reol20150426 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4252();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4253 ON norway_reol20150612 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4253() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4253 WHERE KSPU_GDB.F4253.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4253 WHERE KSPU_GDB.S4253.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4253 WHERE KSPU_GDB.F4253.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4253 WHERE KSPU_GDB.S4253.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4253() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4253
	AFTER UPDATE OR DELETE OF shape ON norway_reol20150612 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4253();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4254 ON norway_reol20150912 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4254() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4254 WHERE KSPU_GDB.F4254.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4254 WHERE KSPU_GDB.S4254.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4254 WHERE KSPU_GDB.F4254.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4254 WHERE KSPU_GDB.S4254.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4254() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4254
	AFTER UPDATE OR DELETE OF shape ON norway_reol20150912 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4254();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4255 ON norway_reol20151016 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4255() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4255 WHERE KSPU_GDB.F4255.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4255 WHERE KSPU_GDB.S4255.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4255 WHERE KSPU_GDB.F4255.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4255 WHERE KSPU_GDB.S4255.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4255() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4255
	AFTER UPDATE OR DELETE OF shape ON norway_reol20151016 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4255();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_4256 ON norway_reol20151121 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_4256() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F4256 WHERE KSPU_GDB.F4256.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4256 WHERE KSPU_GDB.S4256.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F4256 WHERE KSPU_GDB.F4256.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S4256 WHERE KSPU_GDB.S4256.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_4256() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_4256
	AFTER UPDATE OR DELETE OF shape ON norway_reol20151121 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_4256();

</sql>
</changeSet>
  
</databaseChangeLog>