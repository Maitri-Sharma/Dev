<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
<changeSet author="kinariwale-saurabh" context="prod" id="create-gdb-trigger1">
<sql>


DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_1088 ON postdekning_old CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_1088() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F1088 WHERE KSPU_GDB.F1088.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1088 WHERE KSPU_GDB.S1088.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F1088 WHERE KSPU_GDB.F1088.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1088 WHERE KSPU_GDB.S1088.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_1088() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_1088
	AFTER UPDATE OR DELETE OF shape ON postdekning_old FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_1088();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_1393 ON oldutvalggeometry_slettmeg CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_1393() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F1393 WHERE KSPU_GDB.F1393.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1393 WHERE KSPU_GDB.S1393.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F1393 WHERE KSPU_GDB.F1393.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1393 WHERE KSPU_GDB.S1393.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_1393() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_1393
	AFTER UPDATE OR DELETE OF shape ON oldutvalggeometry_slettmeg FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_1393();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_1660 ON postnummergrenser_fiks CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_1660() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F1660 WHERE KSPU_GDB.F1660.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1660 WHERE KSPU_GDB.S1660.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F1660 WHERE KSPU_GDB.F1660.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1660 WHERE KSPU_GDB.S1660.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_1660() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_1660
	AFTER UPDATE OR DELETE OF shape ON postnummergrenser_fiks FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_1660();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_1816 ON norway_reol_180810 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_1816() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F1816 WHERE KSPU_GDB.F1816.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1816 WHERE KSPU_GDB.S1816.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F1816 WHERE KSPU_GDB.F1816.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1816 WHERE KSPU_GDB.S1816.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_1816() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_1816
	AFTER UPDATE OR DELETE OF shape ON norway_reol_180810 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_1816();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_1817 ON norway_reol_index_180810 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_1817() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F1817 WHERE KSPU_GDB.F1817.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1817 WHERE KSPU_GDB.S1817.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F1817 WHERE KSPU_GDB.F1817.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1817 WHERE KSPU_GDB.S1817.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_1817() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_1817
	AFTER UPDATE OR DELETE OF shape ON norway_reol_index_180810 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_1817();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_1818 ON norway_reol_percent_180810 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_1818() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F1818 WHERE KSPU_GDB.F1818.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1818 WHERE KSPU_GDB.S1818.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F1818 WHERE KSPU_GDB.F1818.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1818 WHERE KSPU_GDB.S1818.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_1818() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_1818
	AFTER UPDATE OR DELETE OF shape ON norway_reol_percent_180810 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_1818();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_1825 ON feilplassering CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_1825() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F1825 WHERE KSPU_GDB.F1825.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1825 WHERE KSPU_GDB.S1825.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F1825 WHERE KSPU_GDB.F1825.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S1825 WHERE KSPU_GDB.S1825.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_1825() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_1825
	AFTER UPDATE OR DELETE OF shape ON feilplassering FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_1825();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2137 ON naring_p_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2137() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2137 WHERE KSPU_GDB.F2137.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2137 WHERE KSPU_GDB.S2137.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2137 WHERE KSPU_GDB.F2137.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2137 WHERE KSPU_GDB.S2137.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2137() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2137
	AFTER UPDATE OR DELETE OF shape ON naring_p_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2137();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2171 ON norway_bedrift_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2171() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2171 WHERE KSPU_GDB.F2171.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2171 WHERE KSPU_GDB.S2171.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2171 WHERE KSPU_GDB.F2171.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2171 WHERE KSPU_GDB.S2171.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2171() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2171
	AFTER UPDATE OR DELETE OF shape ON norway_bedrift_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2171();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2183 ON reolmap CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2183() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2183 WHERE KSPU_GDB.F2183.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2183 WHERE KSPU_GDB.S2183.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2183 WHERE KSPU_GDB.F2183.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2183 WHERE KSPU_GDB.S2183.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2183() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2183
	AFTER UPDATE OR DELETE OF shape ON reolmap FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2183();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2188 ON tbl_norway_fylke_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2188() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2188 WHERE KSPU_GDB.F2188.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2188 WHERE KSPU_GDB.S2188.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2188 WHERE KSPU_GDB.F2188.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2188 WHERE KSPU_GDB.S2188.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2188() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2188
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_fylke_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2188();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2189 ON tbl_norway_fylke_index_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2189() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2189 WHERE KSPU_GDB.F2189.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2189 WHERE KSPU_GDB.S2189.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2189 WHERE KSPU_GDB.F2189.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2189 WHERE KSPU_GDB.S2189.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2189() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2189
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_fylke_index_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2189();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2190 ON tbl_norway_fylke_per_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2190() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2190 WHERE KSPU_GDB.F2190.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2190 WHERE KSPU_GDB.S2190.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2190 WHERE KSPU_GDB.F2190.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2190 WHERE KSPU_GDB.S2190.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2190() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2190
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_fylke_per_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2190();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2191 ON tbl_norway_grunnkrets_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2191() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2191 WHERE KSPU_GDB.F2191.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2191 WHERE KSPU_GDB.S2191.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2191 WHERE KSPU_GDB.F2191.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2191 WHERE KSPU_GDB.S2191.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2191() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2191
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_grunnkrets_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2191();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2192 ON tbl_norway_grunnk_in_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2192() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2192 WHERE KSPU_GDB.F2192.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2192 WHERE KSPU_GDB.S2192.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2192 WHERE KSPU_GDB.F2192.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2192 WHERE KSPU_GDB.S2192.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2192() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2192
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_grunnk_in_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2192();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2193 ON tbl_norway_grunnk_per_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2193() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2193 WHERE KSPU_GDB.F2193.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2193 WHERE KSPU_GDB.S2193.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2193 WHERE KSPU_GDB.F2193.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2193 WHERE KSPU_GDB.S2193.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2193() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2193
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_grunnk_per_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2193();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2194 ON tbl_norway_kommune_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2194() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2194 WHERE KSPU_GDB.F2194.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2194 WHERE KSPU_GDB.S2194.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2194 WHERE KSPU_GDB.F2194.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2194 WHERE KSPU_GDB.S2194.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2194() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2194
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_kommune_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2194();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2195 ON tbl_norway_kommune_in_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2195() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2195 WHERE KSPU_GDB.F2195.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2195 WHERE KSPU_GDB.S2195.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2195 WHERE KSPU_GDB.F2195.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2195 WHERE KSPU_GDB.S2195.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2195() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2195
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_kommune_in_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2195();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2196 ON tbl_norway_kommune_per_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2196() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2196 WHERE KSPU_GDB.F2196.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2196 WHERE KSPU_GDB.S2196.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2196 WHERE KSPU_GDB.F2196.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2196 WHERE KSPU_GDB.S2196.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2196() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2196
	AFTER UPDATE OR DELETE OF shape ON tbl_norway_kommune_per_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2196();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2314 ON oldutvalggeometry CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2314() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2314 WHERE KSPU_GDB.F2314.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2314 WHERE KSPU_GDB.S2314.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2314 WHERE KSPU_GDB.F2314.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2314 WHERE KSPU_GDB.S2314.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2314() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2314
	AFTER UPDATE OR DELETE OF shape ON oldutvalggeometry FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2314();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2407 ON adr_p_posten_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2407() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2407 WHERE KSPU_GDB.F2407.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2407 WHERE KSPU_GDB.S2407.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2407 WHERE KSPU_GDB.F2407.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2407 WHERE KSPU_GDB.S2407.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2407() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2407
	AFTER UPDATE OR DELETE OF shape ON adr_p_posten_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2407();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2409 ON gab_adr_p_bolig_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2409() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2409 WHERE KSPU_GDB.F2409.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2409 WHERE KSPU_GDB.S2409.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2409 WHERE KSPU_GDB.F2409.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2409 WHERE KSPU_GDB.S2409.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2409() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2409
	AFTER UPDATE OR DELETE OF shape ON gab_adr_p_bolig_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2409();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2410 ON gkrets_f_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2410() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2410 WHERE KSPU_GDB.F2410.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2410 WHERE KSPU_GDB.S2410.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2410 WHERE KSPU_GDB.F2410.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2410 WHERE KSPU_GDB.S2410.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2410() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2410
	AFTER UPDATE OR DELETE OF shape ON gkrets_f_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2410();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2412 ON n5000_land_f_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2412() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2412 WHERE KSPU_GDB.F2412.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2412 WHERE KSPU_GDB.S2412.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2412 WHERE KSPU_GDB.F2412.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2412 WHERE KSPU_GDB.S2412.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2412() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2412
	AFTER UPDATE OR DELETE OF shape ON n5000_land_f_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2412();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2413 ON postnummergrenser_f_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2413() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2413 WHERE KSPU_GDB.F2413.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2413 WHERE KSPU_GDB.S2413.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2413 WHERE KSPU_GDB.F2413.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2413 WHERE KSPU_GDB.S2413.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2413() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2413
	AFTER UPDATE OR DELETE OF shape ON postnummergrenser_f_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2413();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2414 ON bydeler_f_22042016 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2414() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2414 WHERE KSPU_GDB.F2414.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2414 WHERE KSPU_GDB.S2414.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2414 WHERE KSPU_GDB.F2414.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2414 WHERE KSPU_GDB.S2414.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2414() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2414
	AFTER UPDATE OR DELETE OF shape ON bydeler_f_22042016 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2414();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2415 ON gangveg_l_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2415() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2415 WHERE KSPU_GDB.F2415.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2415 WHERE KSPU_GDB.S2415.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2415 WHERE KSPU_GDB.F2415.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2415 WHERE KSPU_GDB.S2415.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2415() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2415
	AFTER UPDATE OR DELETE OF shape ON gangveg_l_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2415();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2416 ON n2000_arealdekkeflate_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2416() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2416 WHERE KSPU_GDB.F2416.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2416 WHERE KSPU_GDB.S2416.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2416 WHERE KSPU_GDB.F2416.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2416 WHERE KSPU_GDB.S2416.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2416() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2416
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkeflate_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2416();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2417 ON n2000_arealdekkelinje_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2417() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2417 WHERE KSPU_GDB.F2417.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2417 WHERE KSPU_GDB.S2417.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2417 WHERE KSPU_GDB.F2417.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2417 WHERE KSPU_GDB.S2417.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2417() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2417
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkelinje_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2417();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2418 ON n2000_arealdekkepunkt_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2418() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2418 WHERE KSPU_GDB.F2418.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2418 WHERE KSPU_GDB.S2418.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2418 WHERE KSPU_GDB.F2418.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2418 WHERE KSPU_GDB.S2418.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2418() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2418
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkepunkt_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2418();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2419 ON n2000_samferdsellinje_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2419() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2419 WHERE KSPU_GDB.F2419.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2419 WHERE KSPU_GDB.S2419.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2419 WHERE KSPU_GDB.F2419.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2419 WHERE KSPU_GDB.S2419.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2419() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2419
	AFTER UPDATE OR DELETE OF shape ON n2000_samferdsellinje_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2419();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2420 ON n250_arealdekkeflate_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2420() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2420 WHERE KSPU_GDB.F2420.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2420 WHERE KSPU_GDB.S2420.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2420 WHERE KSPU_GDB.F2420.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2420 WHERE KSPU_GDB.S2420.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2420() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2420
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkeflate_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2420();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2421 ON n250_arealdekkelinje_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2421() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2421 WHERE KSPU_GDB.F2421.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2421 WHERE KSPU_GDB.S2421.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2421 WHERE KSPU_GDB.F2421.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2421 WHERE KSPU_GDB.S2421.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2421() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2421
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkelinje_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2421();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2422 ON n250_samferdselpunkt_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2422() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2422 WHERE KSPU_GDB.F2422.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2422 WHERE KSPU_GDB.S2422.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2422 WHERE KSPU_GDB.F2422.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2422 WHERE KSPU_GDB.S2422.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2422() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2422
	AFTER UPDATE OR DELETE OF shape ON n250_samferdselpunkt_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2422();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2423 ON n5000_arealdekkeflate_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2423() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2423 WHERE KSPU_GDB.F2423.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2423 WHERE KSPU_GDB.S2423.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2423 WHERE KSPU_GDB.F2423.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2423 WHERE KSPU_GDB.S2423.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2423() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2423
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkeflate_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2423();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2424 ON n5000_arealdekkelinje_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2424() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2424 WHERE KSPU_GDB.F2424.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2424 WHERE KSPU_GDB.S2424.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2424 WHERE KSPU_GDB.F2424.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2424 WHERE KSPU_GDB.S2424.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2424() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2424
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkelinje_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2424();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2425 ON n5000_samferdsellinje_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2425() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2425 WHERE KSPU_GDB.F2425.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2425 WHERE KSPU_GDB.S2425.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2425 WHERE KSPU_GDB.F2425.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2425 WHERE KSPU_GDB.S2425.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2425() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2425
	AFTER UPDATE OR DELETE OF shape ON n5000_samferdsellinje_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2425();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2426 ON n5000_sted_p_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2426() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2426 WHERE KSPU_GDB.F2426.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2426 WHERE KSPU_GDB.S2426.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2426 WHERE KSPU_GDB.F2426.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2426 WHERE KSPU_GDB.S2426.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2426() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2426
	AFTER UPDATE OR DELETE OF shape ON n5000_sted_p_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2426();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2427 ON ssr_n2000_p_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2427() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2427 WHERE KSPU_GDB.F2427.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2427 WHERE KSPU_GDB.S2427.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2427 WHERE KSPU_GDB.F2427.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2427 WHERE KSPU_GDB.S2427.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2427() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2427
	AFTER UPDATE OR DELETE OF shape ON ssr_n2000_p_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2427();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2428 ON ssr_n250_p_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2428() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2428 WHERE KSPU_GDB.F2428.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2428 WHERE KSPU_GDB.S2428.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2428 WHERE KSPU_GDB.F2428.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2428 WHERE KSPU_GDB.S2428.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2428() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2428
	AFTER UPDATE OR DELETE OF shape ON ssr_n250_p_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2428();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2429 ON ssr_n50_p_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2429() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2429 WHERE KSPU_GDB.F2429.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2429 WHERE KSPU_GDB.S2429.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2429 WHERE KSPU_GDB.F2429.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2429 WHERE KSPU_GDB.S2429.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2429() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2429
	AFTER UPDATE OR DELETE OF shape ON ssr_n50_p_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2429();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2430 ON n250_samferdsellinje_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2430() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2430 WHERE KSPU_GDB.F2430.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2430 WHERE KSPU_GDB.S2430.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2430 WHERE KSPU_GDB.F2430.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2430 WHERE KSPU_GDB.S2430.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2430() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2430
	AFTER UPDATE OR DELETE OF shape ON n250_samferdsellinje_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2430();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2431 ON norway_bef100_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2431() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2431 WHERE KSPU_GDB.F2431.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2431 WHERE KSPU_GDB.S2431.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2431 WHERE KSPU_GDB.F2431.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2431 WHERE KSPU_GDB.S2431.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2431() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2431
	AFTER UPDATE OR DELETE OF shape ON norway_bef100_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2431();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2432 ON norway_fylke_index_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2432() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2432 WHERE KSPU_GDB.F2432.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2432 WHERE KSPU_GDB.S2432.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2432 WHERE KSPU_GDB.F2432.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2432 WHERE KSPU_GDB.S2432.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2432() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2432
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_index_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2432();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2433 ON norway_fylke_percent_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2433() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2433 WHERE KSPU_GDB.F2433.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2433 WHERE KSPU_GDB.S2433.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2433 WHERE KSPU_GDB.F2433.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2433 WHERE KSPU_GDB.S2433.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2433() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2433
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_percent_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2433();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2434 ON norway_fylke_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2434() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2434 WHERE KSPU_GDB.F2434.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2434 WHERE KSPU_GDB.S2434.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2434 WHERE KSPU_GDB.F2434.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2434 WHERE KSPU_GDB.S2434.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2434() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2434
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2434();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2435 ON norway_grunnkrets_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2435() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2435 WHERE KSPU_GDB.F2435.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2435 WHERE KSPU_GDB.S2435.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2435 WHERE KSPU_GDB.F2435.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2435 WHERE KSPU_GDB.S2435.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2435() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2435
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2435();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2436 ON norway_grunnkrets_index_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2436() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2436 WHERE KSPU_GDB.F2436.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2436 WHERE KSPU_GDB.S2436.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2436 WHERE KSPU_GDB.F2436.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2436 WHERE KSPU_GDB.S2436.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2436() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2436
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_index_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2436();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2437 ON norway_grunnkrets_percent_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2437() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2437 WHERE KSPU_GDB.F2437.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2437 WHERE KSPU_GDB.S2437.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2437 WHERE KSPU_GDB.F2437.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2437 WHERE KSPU_GDB.S2437.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2437() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2437
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_percent_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2437();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2438 ON norway_kommune_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2438() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2438 WHERE KSPU_GDB.F2438.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2438 WHERE KSPU_GDB.S2438.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2438 WHERE KSPU_GDB.F2438.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2438 WHERE KSPU_GDB.S2438.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2438() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2438
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2438();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2439 ON norway_kommune_index_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2439() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2439 WHERE KSPU_GDB.F2439.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2439 WHERE KSPU_GDB.S2439.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2439 WHERE KSPU_GDB.F2439.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2439 WHERE KSPU_GDB.S2439.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2439() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2439
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_index_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2439();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2440 ON norway_kommune_percent_o CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2440() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2440 WHERE KSPU_GDB.F2440.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2440 WHERE KSPU_GDB.S2440.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2440 WHERE KSPU_GDB.F2440.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2440 WHERE KSPU_GDB.S2440.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2440() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2440
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_percent_o FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2440();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2441 ON vegnett_l_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2441() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2441 WHERE KSPU_GDB.F2441.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2441 WHERE KSPU_GDB.S2441.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2441 WHERE KSPU_GDB.F2441.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2441 WHERE KSPU_GDB.S2441.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2441() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2441
	AFTER UPDATE OR DELETE OF shape ON vegnett_l_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2441();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2846 ON postnummergrenser_f_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2846() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2846 WHERE KSPU_GDB.F2846.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2846 WHERE KSPU_GDB.S2846.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2846 WHERE KSPU_GDB.F2846.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2846 WHERE KSPU_GDB.S2846.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2846() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2846
	AFTER UPDATE OR DELETE OF shape ON postnummergrenser_f_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2846();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2847 ON naring_p_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2847() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2847 WHERE KSPU_GDB.F2847.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2847 WHERE KSPU_GDB.S2847.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2847 WHERE KSPU_GDB.F2847.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2847 WHERE KSPU_GDB.S2847.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2847() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2847
	AFTER UPDATE OR DELETE OF shape ON naring_p_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2847();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2848 ON bomstasjoner_p_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2848() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2848 WHERE KSPU_GDB.F2848.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2848 WHERE KSPU_GDB.S2848.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2848 WHERE KSPU_GDB.F2848.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2848 WHERE KSPU_GDB.S2848.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2848() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2848
	AFTER UPDATE OR DELETE OF shape ON bomstasjoner_p_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2848();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2849 ON n2000_arealdekkeflate_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2849() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2849 WHERE KSPU_GDB.F2849.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2849 WHERE KSPU_GDB.S2849.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2849 WHERE KSPU_GDB.F2849.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2849 WHERE KSPU_GDB.S2849.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2849() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2849
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkeflate_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2849();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2850 ON n2000_arealdekkelinje_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2850() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2850 WHERE KSPU_GDB.F2850.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2850 WHERE KSPU_GDB.S2850.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2850 WHERE KSPU_GDB.F2850.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2850 WHERE KSPU_GDB.S2850.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2850() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2850
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkelinje_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2850();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2851 ON n2000_arealdekkepunkt_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2851() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2851 WHERE KSPU_GDB.F2851.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2851 WHERE KSPU_GDB.S2851.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2851 WHERE KSPU_GDB.F2851.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2851 WHERE KSPU_GDB.S2851.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2851() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2851
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkepunkt_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2851();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2852 ON n2000_samferdsellinje_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2852() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2852 WHERE KSPU_GDB.F2852.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2852 WHERE KSPU_GDB.S2852.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2852 WHERE KSPU_GDB.F2852.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2852 WHERE KSPU_GDB.S2852.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2852() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2852
	AFTER UPDATE OR DELETE OF shape ON n2000_samferdsellinje_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2852();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2853 ON n250_arealdekkeflate_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2853() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2853 WHERE KSPU_GDB.F2853.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2853 WHERE KSPU_GDB.S2853.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2853 WHERE KSPU_GDB.F2853.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2853 WHERE KSPU_GDB.S2853.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2853() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2853
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkeflate_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2853();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2854 ON n250_arealdekkelinje_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2854() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2854 WHERE KSPU_GDB.F2854.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2854 WHERE KSPU_GDB.S2854.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2854 WHERE KSPU_GDB.F2854.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2854 WHERE KSPU_GDB.S2854.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2854() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2854
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkelinje_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2854();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2855 ON n250_samferdsellinje_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2855() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2855 WHERE KSPU_GDB.F2855.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2855 WHERE KSPU_GDB.S2855.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2855 WHERE KSPU_GDB.F2855.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2855 WHERE KSPU_GDB.S2855.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2855() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2855
	AFTER UPDATE OR DELETE OF shape ON n250_samferdsellinje_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2855();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2856 ON n250_samferdselpunkt_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2856() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2856 WHERE KSPU_GDB.F2856.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2856 WHERE KSPU_GDB.S2856.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2856 WHERE KSPU_GDB.F2856.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2856 WHERE KSPU_GDB.S2856.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2856() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2856
	AFTER UPDATE OR DELETE OF shape ON n250_samferdselpunkt_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2856();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2857 ON n5000_arealdekkeflate_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2857() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2857 WHERE KSPU_GDB.F2857.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2857 WHERE KSPU_GDB.S2857.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2857 WHERE KSPU_GDB.F2857.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2857 WHERE KSPU_GDB.S2857.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2857() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2857
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkeflate_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2857();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2858 ON n5000_arealdekkelinje_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2858() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2858 WHERE KSPU_GDB.F2858.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2858 WHERE KSPU_GDB.S2858.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2858 WHERE KSPU_GDB.F2858.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2858 WHERE KSPU_GDB.S2858.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2858() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2858
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkelinje_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2858();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2859 ON n5000_samferdsellinje_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2859() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2859 WHERE KSPU_GDB.F2859.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2859 WHERE KSPU_GDB.S2859.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2859 WHERE KSPU_GDB.F2859.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2859 WHERE KSPU_GDB.S2859.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2859() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2859
	AFTER UPDATE OR DELETE OF shape ON n5000_samferdsellinje_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2859();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2860 ON n5000_sted_p_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2860() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2860 WHERE KSPU_GDB.F2860.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2860 WHERE KSPU_GDB.S2860.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2860 WHERE KSPU_GDB.F2860.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2860 WHERE KSPU_GDB.S2860.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2860() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2860
	AFTER UPDATE OR DELETE OF shape ON n5000_sted_p_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2860();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2861 ON ssr_n2000_p CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2861() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2861 WHERE KSPU_GDB.F2861.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2861 WHERE KSPU_GDB.S2861.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2861 WHERE KSPU_GDB.F2861.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2861 WHERE KSPU_GDB.S2861.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2861() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2861
	AFTER UPDATE OR DELETE OF shape ON ssr_n2000_p FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2861();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2862 ON ssr_n250_p CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2862() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2862 WHERE KSPU_GDB.F2862.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2862 WHERE KSPU_GDB.S2862.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2862 WHERE KSPU_GDB.F2862.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2862 WHERE KSPU_GDB.S2862.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2862() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2862
	AFTER UPDATE OR DELETE OF shape ON ssr_n250_p FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2862();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2863 ON ssr_n50_p_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2863() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2863 WHERE KSPU_GDB.F2863.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2863 WHERE KSPU_GDB.S2863.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2863 WHERE KSPU_GDB.F2863.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2863 WHERE KSPU_GDB.S2863.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2863() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2863
	AFTER UPDATE OR DELETE OF shape ON ssr_n50_p_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2863();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2864 ON trafikktelling_l_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2864() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2864 WHERE KSPU_GDB.F2864.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2864 WHERE KSPU_GDB.S2864.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2864 WHERE KSPU_GDB.F2864.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2864 WHERE KSPU_GDB.S2864.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2864() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2864
	AFTER UPDATE OR DELETE OF shape ON trafikktelling_l_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2864();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2865 ON norway_bedrift_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2865() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2865 WHERE KSPU_GDB.F2865.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2865 WHERE KSPU_GDB.S2865.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2865 WHERE KSPU_GDB.F2865.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2865 WHERE KSPU_GDB.S2865.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2865() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2865
	AFTER UPDATE OR DELETE OF shape ON norway_bedrift_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2865();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2866 ON norway_bef100_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2866() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2866 WHERE KSPU_GDB.F2866.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2866 WHERE KSPU_GDB.S2866.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2866 WHERE KSPU_GDB.F2866.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2866 WHERE KSPU_GDB.S2866.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2866() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2866
	AFTER UPDATE OR DELETE OF shape ON norway_bef100_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2866();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2867 ON norway_fylke_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2867() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2867 WHERE KSPU_GDB.F2867.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2867 WHERE KSPU_GDB.S2867.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2867 WHERE KSPU_GDB.F2867.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2867 WHERE KSPU_GDB.S2867.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2867() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2867
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2867();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2868 ON norway_fylke_index_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2868() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2868 WHERE KSPU_GDB.F2868.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2868 WHERE KSPU_GDB.S2868.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2868 WHERE KSPU_GDB.F2868.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2868 WHERE KSPU_GDB.S2868.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2868() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2868
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_index_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2868();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2869 ON norway_fylke_percent_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2869() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2869 WHERE KSPU_GDB.F2869.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2869 WHERE KSPU_GDB.S2869.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2869 WHERE KSPU_GDB.F2869.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2869 WHERE KSPU_GDB.S2869.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2869() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2869
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_percent_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2869();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2870 ON norway_grunnkrets_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2870() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2870 WHERE KSPU_GDB.F2870.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2870 WHERE KSPU_GDB.S2870.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2870 WHERE KSPU_GDB.F2870.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2870 WHERE KSPU_GDB.S2870.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2870() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2870
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2870();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2871 ON norway_grunnkrets_index_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2871() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2871 WHERE KSPU_GDB.F2871.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2871 WHERE KSPU_GDB.S2871.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2871 WHERE KSPU_GDB.F2871.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2871 WHERE KSPU_GDB.S2871.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2871() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2871
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_index_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2871();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2872 ON norway_grunnkrets_per_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2872() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2872 WHERE KSPU_GDB.F2872.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2872 WHERE KSPU_GDB.S2872.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2872 WHERE KSPU_GDB.F2872.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2872 WHERE KSPU_GDB.S2872.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2872() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2872
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_per_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2872();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2873 ON norway_kommune_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2873() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2873 WHERE KSPU_GDB.F2873.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2873 WHERE KSPU_GDB.S2873.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2873 WHERE KSPU_GDB.F2873.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2873 WHERE KSPU_GDB.S2873.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2873() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2873
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2873();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2874 ON norway_kommune_index_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2874() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2874 WHERE KSPU_GDB.F2874.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2874 WHERE KSPU_GDB.S2874.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2874 WHERE KSPU_GDB.F2874.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2874 WHERE KSPU_GDB.S2874.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2874() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2874
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_index_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2874();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2875 ON norway_kommune_percent_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2875() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2875 WHERE KSPU_GDB.F2875.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2875 WHERE KSPU_GDB.S2875.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2875 WHERE KSPU_GDB.F2875.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2875 WHERE KSPU_GDB.S2875.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2875() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2875
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_percent_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2875();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2876 ON adr_p_posten_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2876() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2876 WHERE KSPU_GDB.F2876.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2876 WHERE KSPU_GDB.S2876.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2876 WHERE KSPU_GDB.F2876.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2876 WHERE KSPU_GDB.S2876.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2876() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2876
	AFTER UPDATE OR DELETE OF shape ON adr_p_posten_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2876();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2877 ON avisdekningkomm_old CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2877() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2877 WHERE KSPU_GDB.F2877.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2877 WHERE KSPU_GDB.S2877.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2877 WHERE KSPU_GDB.F2877.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2877 WHERE KSPU_GDB.S2877.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2877() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2877
	AFTER UPDATE OR DELETE OF shape ON avisdekningkomm_old FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2877();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2878 ON gab_adr_p_bolig_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2878() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2878 WHERE KSPU_GDB.F2878.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2878 WHERE KSPU_GDB.S2878.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2878 WHERE KSPU_GDB.F2878.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2878 WHERE KSPU_GDB.S2878.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2878() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2878
	AFTER UPDATE OR DELETE OF shape ON gab_adr_p_bolig_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2878();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2880 ON n250_komm_f_svalbard_old CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2880() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2880 WHERE KSPU_GDB.F2880.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2880 WHERE KSPU_GDB.S2880.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2880 WHERE KSPU_GDB.F2880.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2880 WHERE KSPU_GDB.S2880.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2880() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2880
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_svalbard_old FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2880();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_2881 ON gkrets_f_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_2881() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F2881 WHERE KSPU_GDB.F2881.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2881 WHERE KSPU_GDB.S2881.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F2881 WHERE KSPU_GDB.F2881.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S2881 WHERE KSPU_GDB.S2881.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_2881() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_2881
	AFTER UPDATE OR DELETE OF shape ON gkrets_f_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_2881();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3071 ON avisdekningkomm_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3071() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3071 WHERE KSPU_GDB.F3071.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3071 WHERE KSPU_GDB.S3071.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3071 WHERE KSPU_GDB.F3071.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3071 WHERE KSPU_GDB.S3071.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3071() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3071
	AFTER UPDATE OR DELETE OF shape ON avisdekningkomm_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3071();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3072 ON n250_komm_f_svalbard_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3072() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3072 WHERE KSPU_GDB.F3072.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3072 WHERE KSPU_GDB.S3072.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3072 WHERE KSPU_GDB.F3072.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3072 WHERE KSPU_GDB.S3072.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3072() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3072
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_svalbard_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3072();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3586 ON norway_reol20160123 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3586() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3586 WHERE KSPU_GDB.F3586.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3586 WHERE KSPU_GDB.S3586.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3586 WHERE KSPU_GDB.F3586.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3586 WHERE KSPU_GDB.S3586.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3586() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3586
	AFTER UPDATE OR DELETE OF shape ON norway_reol20160123 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3586();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3613 ON norway_reol20160212 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3613() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3613 WHERE KSPU_GDB.F3613.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3613 WHERE KSPU_GDB.S3613.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3613 WHERE KSPU_GDB.F3613.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3613 WHERE KSPU_GDB.S3613.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3613() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3613
	AFTER UPDATE OR DELETE OF shape ON norway_reol20160212 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3613();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3640 ON norway_reol20160226 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3640() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3640 WHERE KSPU_GDB.F3640.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3640 WHERE KSPU_GDB.S3640.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3640 WHERE KSPU_GDB.F3640.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3640 WHERE KSPU_GDB.S3640.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3640() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3640
	AFTER UPDATE OR DELETE OF shape ON norway_reol20160226 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3640();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3646 ON naring_p_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3646() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3646 WHERE KSPU_GDB.F3646.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3646 WHERE KSPU_GDB.S3646.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3646 WHERE KSPU_GDB.F3646.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3646 WHERE KSPU_GDB.S3646.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3646() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3646
	AFTER UPDATE OR DELETE OF shape ON naring_p_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3646();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3647 ON bomstasjoner_p_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3647() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3647 WHERE KSPU_GDB.F3647.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3647 WHERE KSPU_GDB.S3647.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3647 WHERE KSPU_GDB.F3647.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3647 WHERE KSPU_GDB.S3647.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3647() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3647
	AFTER UPDATE OR DELETE OF shape ON bomstasjoner_p_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3647();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3648 ON bydel_f_new_220416 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3648() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3648 WHERE KSPU_GDB.F3648.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3648 WHERE KSPU_GDB.S3648.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3648 WHERE KSPU_GDB.F3648.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3648 WHERE KSPU_GDB.S3648.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3648() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3648
	AFTER UPDATE OR DELETE OF shape ON bydel_f_new_220416 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3648();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3649 ON gangveg_l_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3649() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3649 WHERE KSPU_GDB.F3649.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3649 WHERE KSPU_GDB.S3649.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3649 WHERE KSPU_GDB.F3649.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3649 WHERE KSPU_GDB.S3649.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3649() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3649
	AFTER UPDATE OR DELETE OF shape ON gangveg_l_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3649();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3650 ON n2000_arealdekkeflate_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3650() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3650 WHERE KSPU_GDB.F3650.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3650 WHERE KSPU_GDB.S3650.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3650 WHERE KSPU_GDB.F3650.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3650 WHERE KSPU_GDB.S3650.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3650() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3650
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkeflate_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3650();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3651 ON n2000_arealdekkelinje_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3651() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3651 WHERE KSPU_GDB.F3651.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3651 WHERE KSPU_GDB.S3651.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3651 WHERE KSPU_GDB.F3651.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3651 WHERE KSPU_GDB.S3651.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3651() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3651
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkelinje_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3651();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3652 ON n2000_arealdekkepunkt_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3652() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3652 WHERE KSPU_GDB.F3652.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3652 WHERE KSPU_GDB.S3652.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3652 WHERE KSPU_GDB.F3652.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3652 WHERE KSPU_GDB.S3652.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3652() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3652
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkepunkt_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3652();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3653 ON n2000_navnpunkt_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3653() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3653 WHERE KSPU_GDB.F3653.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3653 WHERE KSPU_GDB.S3653.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3653 WHERE KSPU_GDB.F3653.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3653 WHERE KSPU_GDB.S3653.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3653() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3653
	AFTER UPDATE OR DELETE OF shape ON n2000_navnpunkt_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3653();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3654 ON n250_arealdekkeflate_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3654() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3654 WHERE KSPU_GDB.F3654.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3654 WHERE KSPU_GDB.S3654.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3654 WHERE KSPU_GDB.F3654.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3654 WHERE KSPU_GDB.S3654.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3654() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3654
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkeflate_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3654();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3655 ON n250_arealdekkelinje_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3655() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3655 WHERE KSPU_GDB.F3655.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3655 WHERE KSPU_GDB.S3655.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3655 WHERE KSPU_GDB.F3655.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3655 WHERE KSPU_GDB.S3655.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3655() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3655
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkelinje_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3655();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3656 ON n250_arealdekkepunkt_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3656() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3656 WHERE KSPU_GDB.F3656.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3656 WHERE KSPU_GDB.S3656.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3656 WHERE KSPU_GDB.F3656.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3656 WHERE KSPU_GDB.S3656.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3656() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3656
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkepunkt_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3656();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3657 ON n250_navnpunkt_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3657() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3657 WHERE KSPU_GDB.F3657.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3657 WHERE KSPU_GDB.S3657.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3657 WHERE KSPU_GDB.F3657.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3657 WHERE KSPU_GDB.S3657.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3657() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3657
	AFTER UPDATE OR DELETE OF shape ON n250_navnpunkt_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3657();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3658 ON n250_samferdsellinje_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3658() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3658 WHERE KSPU_GDB.F3658.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3658 WHERE KSPU_GDB.S3658.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3658 WHERE KSPU_GDB.F3658.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3658 WHERE KSPU_GDB.S3658.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3658() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3658
	AFTER UPDATE OR DELETE OF shape ON n250_samferdsellinje_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3658();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3659 ON n250_samferdselpunkt_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3659() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3659 WHERE KSPU_GDB.F3659.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3659 WHERE KSPU_GDB.S3659.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3659 WHERE KSPU_GDB.F3659.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3659 WHERE KSPU_GDB.S3659.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3659() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3659
	AFTER UPDATE OR DELETE OF shape ON n250_samferdselpunkt_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3659();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3660 ON n5000_arealdekkeflate_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3660() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3660 WHERE KSPU_GDB.F3660.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3660 WHERE KSPU_GDB.S3660.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3660 WHERE KSPU_GDB.F3660.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3660 WHERE KSPU_GDB.S3660.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3660() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3660
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkeflate_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3660();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3661 ON n5000_arealdekkelinje_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3661() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3661 WHERE KSPU_GDB.F3661.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3661 WHERE KSPU_GDB.S3661.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3661 WHERE KSPU_GDB.F3661.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3661 WHERE KSPU_GDB.S3661.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3661() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3661
	AFTER UPDATE OR DELETE OF shape ON n5000_arealdekkelinje_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3661();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3662 ON n5000_sted_p_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3662() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3662 WHERE KSPU_GDB.F3662.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3662 WHERE KSPU_GDB.S3662.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3662 WHERE KSPU_GDB.F3662.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3662 WHERE KSPU_GDB.S3662.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3662() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3662
	AFTER UPDATE OR DELETE OF shape ON n5000_sted_p_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3662();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3663 ON ssr_n50_p_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3663() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3663 WHERE KSPU_GDB.F3663.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3663 WHERE KSPU_GDB.S3663.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3663 WHERE KSPU_GDB.F3663.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3663 WHERE KSPU_GDB.S3663.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3663() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3663
	AFTER UPDATE OR DELETE OF shape ON ssr_n50_p_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3663();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3664 ON trafikktelling_l_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3664() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3664 WHERE KSPU_GDB.F3664.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3664 WHERE KSPU_GDB.S3664.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3664 WHERE KSPU_GDB.F3664.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3664 WHERE KSPU_GDB.S3664.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3664() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3664
	AFTER UPDATE OR DELETE OF shape ON trafikktelling_l_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3664();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3665 ON n2000_samferdsellinje_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3665() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3665 WHERE KSPU_GDB.F3665.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3665 WHERE KSPU_GDB.S3665.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3665 WHERE KSPU_GDB.F3665.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3665 WHERE KSPU_GDB.S3665.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3665() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3665
	AFTER UPDATE OR DELETE OF shape ON n2000_samferdsellinje_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3665();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3666 ON n5000_samferdsellinje_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3666() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3666 WHERE KSPU_GDB.F3666.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3666 WHERE KSPU_GDB.S3666.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3666 WHERE KSPU_GDB.F3666.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3666 WHERE KSPU_GDB.S3666.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3666() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3666
	AFTER UPDATE OR DELETE OF shape ON n5000_samferdsellinje_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3666();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3667 ON norway_bedrift_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3667() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3667 WHERE KSPU_GDB.F3667.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3667 WHERE KSPU_GDB.S3667.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3667 WHERE KSPU_GDB.F3667.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3667 WHERE KSPU_GDB.S3667.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3667() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3667
	AFTER UPDATE OR DELETE OF shape ON norway_bedrift_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3667();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3668 ON norway_bef100_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3668() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3668 WHERE KSPU_GDB.F3668.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3668 WHERE KSPU_GDB.S3668.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3668 WHERE KSPU_GDB.F3668.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3668 WHERE KSPU_GDB.S3668.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3668() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3668
	AFTER UPDATE OR DELETE OF shape ON norway_bef100_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3668();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3669 ON fylke_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3669() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3669 WHERE KSPU_GDB.F3669.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3669 WHERE KSPU_GDB.S3669.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3669 WHERE KSPU_GDB.F3669.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3669 WHERE KSPU_GDB.S3669.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3669() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3669
	AFTER UPDATE OR DELETE OF shape ON fylke_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3669();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3670 ON gkrets_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3670() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3670 WHERE KSPU_GDB.F3670.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3670 WHERE KSPU_GDB.S3670.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3670 WHERE KSPU_GDB.F3670.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3670 WHERE KSPU_GDB.S3670.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3670() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3670
	AFTER UPDATE OR DELETE OF shape ON gkrets_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3670();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3671 ON komm_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3671() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3671 WHERE KSPU_GDB.F3671.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3671 WHERE KSPU_GDB.S3671.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3671 WHERE KSPU_GDB.F3671.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3671 WHERE KSPU_GDB.S3671.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3671() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3671
	AFTER UPDATE OR DELETE OF shape ON komm_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3671();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3672 ON postsoner_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3672() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3672 WHERE KSPU_GDB.F3672.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3672 WHERE KSPU_GDB.S3672.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3672 WHERE KSPU_GDB.F3672.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3672 WHERE KSPU_GDB.S3672.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3672() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3672
	AFTER UPDATE OR DELETE OF shape ON postsoner_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3672();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3673 ON norway_future_kommune_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3673() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3673 WHERE KSPU_GDB.F3673.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3673 WHERE KSPU_GDB.S3673.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3673 WHERE KSPU_GDB.F3673.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3673 WHERE KSPU_GDB.S3673.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3673() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3673
	AFTER UPDATE OR DELETE OF shape ON norway_future_kommune_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3673();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3674 ON norway_fylke_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3674() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3674 WHERE KSPU_GDB.F3674.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3674 WHERE KSPU_GDB.S3674.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3674 WHERE KSPU_GDB.F3674.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3674 WHERE KSPU_GDB.S3674.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3674() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3674
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3674();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3675 ON norway_fylke_index_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3675() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3675 WHERE KSPU_GDB.F3675.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3675 WHERE KSPU_GDB.S3675.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3675 WHERE KSPU_GDB.F3675.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3675 WHERE KSPU_GDB.S3675.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3675() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3675
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_index_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3675();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3676 ON norway_fylke_percent_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3676() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3676 WHERE KSPU_GDB.F3676.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3676 WHERE KSPU_GDB.S3676.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3676 WHERE KSPU_GDB.F3676.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3676 WHERE KSPU_GDB.S3676.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3676() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3676
	AFTER UPDATE OR DELETE OF shape ON norway_fylke_percent_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3676();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3677 ON norway_grunnkrets_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3677() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3677 WHERE KSPU_GDB.F3677.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3677 WHERE KSPU_GDB.S3677.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3677 WHERE KSPU_GDB.F3677.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3677 WHERE KSPU_GDB.S3677.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3677() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3677
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3677();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3678 ON norway_grunnkrets_ind_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3678() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3678 WHERE KSPU_GDB.F3678.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3678 WHERE KSPU_GDB.S3678.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3678 WHERE KSPU_GDB.F3678.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3678 WHERE KSPU_GDB.S3678.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3678() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3678
	AFTER UPDATE OR DELETE OF shape ON norway_grunnkrets_ind_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3678();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3679 ON norway_grunn_per_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3679() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3679 WHERE KSPU_GDB.F3679.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3679 WHERE KSPU_GDB.S3679.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3679 WHERE KSPU_GDB.F3679.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3679 WHERE KSPU_GDB.S3679.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3679() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3679
	AFTER UPDATE OR DELETE OF shape ON norway_grunn_per_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3679();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3680 ON norway_kommune_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3680() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3680 WHERE KSPU_GDB.F3680.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3680 WHERE KSPU_GDB.S3680.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3680 WHERE KSPU_GDB.F3680.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3680 WHERE KSPU_GDB.S3680.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3680() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3680
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3680();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3681 ON norway_kommune_ind_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3681() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3681 WHERE KSPU_GDB.F3681.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3681 WHERE KSPU_GDB.S3681.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3681 WHERE KSPU_GDB.F3681.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3681 WHERE KSPU_GDB.S3681.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3681() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3681
	AFTER UPDATE OR DELETE OF shape ON norway_kommune_ind_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3681();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3682 ON norway_kome_pe_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3682() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3682 WHERE KSPU_GDB.F3682.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3682 WHERE KSPU_GDB.S3682.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3682 WHERE KSPU_GDB.F3682.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3682 WHERE KSPU_GDB.S3682.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3682() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3682
	AFTER UPDATE OR DELETE OF shape ON norway_kome_pe_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3682();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3683 ON vegnett_l_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3683() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3683 WHERE KSPU_GDB.F3683.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3683 WHERE KSPU_GDB.S3683.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3683 WHERE KSPU_GDB.F3683.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3683 WHERE KSPU_GDB.S3683.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3683() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3683
	AFTER UPDATE OR DELETE OF shape ON vegnett_l_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3683();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3685 ON adr_p_posten_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3685() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3685 WHERE KSPU_GDB.F3685.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3685 WHERE KSPU_GDB.S3685.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3685 WHERE KSPU_GDB.F3685.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3685 WHERE KSPU_GDB.S3685.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3685() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3685
	AFTER UPDATE OR DELETE OF shape ON adr_p_posten_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3685();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3686 ON avisdekningkomm_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3686() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3686 WHERE KSPU_GDB.F3686.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3686 WHERE KSPU_GDB.S3686.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3686 WHERE KSPU_GDB.F3686.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3686 WHERE KSPU_GDB.S3686.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3686() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3686
	AFTER UPDATE OR DELETE OF shape ON avisdekningkomm_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3686();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3687 ON gab_adr_p_bolig_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3687() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3687 WHERE KSPU_GDB.F3687.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3687 WHERE KSPU_GDB.S3687.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3687 WHERE KSPU_GDB.F3687.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3687 WHERE KSPU_GDB.S3687.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3687() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3687
	AFTER UPDATE OR DELETE OF shape ON gab_adr_p_bolig_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3687();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3688 ON n250_komm_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3688() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3688 WHERE KSPU_GDB.F3688.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3688 WHERE KSPU_GDB.S3688.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3688 WHERE KSPU_GDB.F3688.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3688 WHERE KSPU_GDB.S3688.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3688() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3688
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3688();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3689 ON n250_komm_f_sva_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3689() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3689 WHERE KSPU_GDB.F3689.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3689 WHERE KSPU_GDB.S3689.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3689 WHERE KSPU_GDB.F3689.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3689 WHERE KSPU_GDB.S3689.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3689() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3689
	AFTER UPDATE OR DELETE OF shape ON n250_komm_f_sva_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3689();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3690 ON n5000_land_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3690() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3690 WHERE KSPU_GDB.F3690.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3690 WHERE KSPU_GDB.S3690.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3690 WHERE KSPU_GDB.F3690.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3690 WHERE KSPU_GDB.S3690.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3690() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3690
	AFTER UPDATE OR DELETE OF shape ON n5000_land_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3690();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3691 ON postnummergrenser_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3691() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3691 WHERE KSPU_GDB.F3691.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3691 WHERE KSPU_GDB.S3691.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3691 WHERE KSPU_GDB.F3691.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3691 WHERE KSPU_GDB.S3691.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3691() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3691
	AFTER UPDATE OR DELETE OF shape ON postnummergrenser_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3691();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3718 ON norway_reol20160423 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3718() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3718 WHERE KSPU_GDB.F3718.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3718 WHERE KSPU_GDB.S3718.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3718 WHERE KSPU_GDB.F3718.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3718 WHERE KSPU_GDB.S3718.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3718() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3718
	AFTER UPDATE OR DELETE OF shape ON norway_reol20160423 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3718();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3719 ON bydeler_f_0012017 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3719() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3719 WHERE KSPU_GDB.F3719.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3719 WHERE KSPU_GDB.S3719.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3719 WHERE KSPU_GDB.F3719.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3719 WHERE KSPU_GDB.S3719.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3719() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3719
	AFTER UPDATE OR DELETE OF shape ON bydeler_f_0012017 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3719();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3746 ON norway_reol20160610 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3746() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3746 WHERE KSPU_GDB.F3746.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3746 WHERE KSPU_GDB.S3746.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3746 WHERE KSPU_GDB.F3746.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3746 WHERE KSPU_GDB.S3746.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3746() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3746
	AFTER UPDATE OR DELETE OF shape ON norway_reol20160610 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3746();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3773 ON norway_reol20160916 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3773() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3773 WHERE KSPU_GDB.F3773.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3773 WHERE KSPU_GDB.S3773.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3773 WHERE KSPU_GDB.F3773.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3773 WHERE KSPU_GDB.S3773.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3773() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3773
	AFTER UPDATE OR DELETE OF shape ON norway_reol20160916 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3773();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3800 ON norway_reol20161014 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3800() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3800 WHERE KSPU_GDB.F3800.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3800 WHERE KSPU_GDB.S3800.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3800 WHERE KSPU_GDB.F3800.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3800 WHERE KSPU_GDB.S3800.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3800() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3800
	AFTER UPDATE OR DELETE OF shape ON norway_reol20161014 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3800();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3827 ON norway_reol20161118 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3827() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3827 WHERE KSPU_GDB.F3827.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3827 WHERE KSPU_GDB.S3827.sp_fid = OLD.Shape
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.Shape::text, '') = '' AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3827 WHERE KSPU_GDB.F3827.fid = OLD.Shape;
    DELETE FROM KSPU_GDB.S3827 WHERE KSPU_GDB.S3827.sp_fid = OLD.Shape
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.Shape != OLD.Shape AND (OLD.Shape IS NOT NULL AND OLD.Shape::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.Shape::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3827() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3827
	AFTER UPDATE OR DELETE OF shape ON norway_reol20161118 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3827();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3832 ON fylke_f_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3832() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3832 WHERE KSPU_GDB.F3832.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3832 WHERE KSPU_GDB.S3832.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3832 WHERE KSPU_GDB.F3832.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3832 WHERE KSPU_GDB.S3832.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3832() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3832
	AFTER UPDATE OR DELETE OF shape ON fylke_f_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3832();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3833 ON gkrets_f_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3833() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3833 WHERE KSPU_GDB.F3833.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3833 WHERE KSPU_GDB.S3833.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3833 WHERE KSPU_GDB.F3833.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3833 WHERE KSPU_GDB.S3833.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3833() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3833
	AFTER UPDATE OR DELETE OF shape ON gkrets_f_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3833();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3834 ON komm_f_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3834() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3834 WHERE KSPU_GDB.F3834.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3834 WHERE KSPU_GDB.S3834.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3834 WHERE KSPU_GDB.F3834.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3834 WHERE KSPU_GDB.S3834.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3834() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3834
	AFTER UPDATE OR DELETE OF shape ON komm_f_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3834();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3835 ON postnummergrenser_f_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3835() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3835 WHERE KSPU_GDB.F3835.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3835 WHERE KSPU_GDB.S3835.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3835 WHERE KSPU_GDB.F3835.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3835 WHERE KSPU_GDB.S3835.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3835() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3835
	AFTER UPDATE OR DELETE OF shape ON postnummergrenser_f_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3835();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3836 ON postsoner_f_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3836() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3836 WHERE KSPU_GDB.F3836.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3836 WHERE KSPU_GDB.S3836.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3836 WHERE KSPU_GDB.F3836.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3836 WHERE KSPU_GDB.S3836.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3836() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3836
	AFTER UPDATE OR DELETE OF shape ON postsoner_f_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3836();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3837 ON naring_p_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3837() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3837 WHERE KSPU_GDB.F3837.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3837 WHERE KSPU_GDB.S3837.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3837 WHERE KSPU_GDB.F3837.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3837 WHERE KSPU_GDB.S3837.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3837() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3837
	AFTER UPDATE OR DELETE OF shape ON naring_p_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3837();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3838 ON bomstasjoner_p_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3838() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3838 WHERE KSPU_GDB.F3838.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3838 WHERE KSPU_GDB.S3838.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3838 WHERE KSPU_GDB.F3838.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3838 WHERE KSPU_GDB.S3838.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3838() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3838
	AFTER UPDATE OR DELETE OF shape ON bomstasjoner_p_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3838();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3839 ON bydeler_f_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3839() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3839 WHERE KSPU_GDB.F3839.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3839 WHERE KSPU_GDB.S3839.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3839 WHERE KSPU_GDB.F3839.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3839 WHERE KSPU_GDB.S3839.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3839() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3839
	AFTER UPDATE OR DELETE OF shape ON bydeler_f_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3839();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3840 ON gangveg_l CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3840() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3840 WHERE KSPU_GDB.F3840.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3840 WHERE KSPU_GDB.S3840.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3840 WHERE KSPU_GDB.F3840.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3840 WHERE KSPU_GDB.S3840.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3840() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3840
	AFTER UPDATE OR DELETE OF shape ON gangveg_l FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3840();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3841 ON n2000_arealdekkeflate_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3841() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3841 WHERE KSPU_GDB.F3841.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3841 WHERE KSPU_GDB.S3841.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3841 WHERE KSPU_GDB.F3841.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3841 WHERE KSPU_GDB.S3841.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3841() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3841
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkeflate_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3841();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3842 ON n2000_arealdekkelinje_250120 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3842() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3842 WHERE KSPU_GDB.F3842.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3842 WHERE KSPU_GDB.S3842.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3842 WHERE KSPU_GDB.F3842.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3842 WHERE KSPU_GDB.S3842.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3842() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3842
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkelinje_250120 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3842();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3843 ON n2000_arealdekkepunkt_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3843() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3843 WHERE KSPU_GDB.F3843.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3843 WHERE KSPU_GDB.S3843.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3843 WHERE KSPU_GDB.F3843.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3843 WHERE KSPU_GDB.S3843.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3843() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3843
	AFTER UPDATE OR DELETE OF shape ON n2000_arealdekkepunkt_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3843();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3844 ON n2000_navnpunkt CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3844() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3844 WHERE KSPU_GDB.F3844.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3844 WHERE KSPU_GDB.S3844.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3844 WHERE KSPU_GDB.F3844.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3844 WHERE KSPU_GDB.S3844.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3844() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3844
	AFTER UPDATE OR DELETE OF shape ON n2000_navnpunkt FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3844();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3845 ON n2000_samferdsellinje CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3845() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3845 WHERE KSPU_GDB.F3845.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3845 WHERE KSPU_GDB.S3845.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3845 WHERE KSPU_GDB.F3845.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3845 WHERE KSPU_GDB.S3845.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3845() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3845
	AFTER UPDATE OR DELETE OF shape ON n2000_samferdsellinje FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3845();

DROP TRIGGER IF EXISTS kspu_gdb.spcol_del_cascade_3846 ON n250_arealdekkeflate_19012018 CASCADE;
CREATE OR REPLACE FUNCTION kspu_gdb.trigger_fct_spcol_del_cascade_3846() RETURNS trigger AS $BODY$
DECLARE
             -- ArcSDE 9.2 --
BEGIN
  BEGIN
           IF TG_OP = 'DELETE' THEN
           DELETE FROM KSPU_GDB.F3846 WHERE KSPU_GDB.F3846.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3846 WHERE KSPU_GDB.S3846.sp_fid = OLD.SHAPE
;
           END IF;
          IF TG_OP = 'UPDATE' AND (coalesce(NEW.SHAPE::text, '') = '' AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
          DELETE FROM KSPU_GDB.F3846 WHERE KSPU_GDB.F3846.fid = OLD.SHAPE;
    DELETE FROM KSPU_GDB.S3846 WHERE KSPU_GDB.S3846.sp_fid = OLD.SHAPE
;
          END IF;

           IF TG_OP = 'UPDATE' AND (NEW.SHAPE != OLD.SHAPE AND (OLD.SHAPE IS NOT NULL AND OLD.SHAPE::text <> '')) THEN
             RAISE EXCEPTION 'inv_spatial_col1' USING ERRCODE = '50001';
           END IF;

          EXCEPTION
            WHEN SQLSTATE '50001' THEN
            RAISE EXCEPTION '%', 'Invalid SDE spatial column UPDATE. Cannot update spatial column value '||NEW.SHAPE::varchar||' to non-NULL value.' USING ERRCODE = '45013';  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_spcol_del_cascade_3846() FROM PUBLIC;

CREATE TRIGGER kspu_gdb.spcol_del_cascade_3846
	AFTER UPDATE OR DELETE OF shape ON n250_arealdekkeflate_19012018 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_spcol_del_cascade_3846();

</sql>
</changeSet>
  
</databaseChangeLog>